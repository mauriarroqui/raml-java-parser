RamlDocumentNode (Start: 11 , End: 4209, On: input.raml, Source: SYObjectNode)
    KeyValueNodeImpl (Start: 11 , End: 23, On: input.raml)
        SYStringNode: "version" (Start: 11 , End: 18, On: input.raml)
        ObjectNodeImpl (Start: 20 , End: 23, On: input.raml, Source: SYStringNode)
            KeyValueNodeImpl (Start: -1 , End: 23)
                StringNodeImpl: "value" (Start: -1 , End: -1)
                SYStringNode: "api" (Start: 20 , End: 23, On: input.raml, Source: SYStringNode)
    KeyValueNodeImpl (Start: 24 , End: 49, On: input.raml)
        SYStringNode: "title" (Start: 24 , End: 29, On: input.raml)
        OverlayableObjectNodeImpl (Start: 31 , End: 49, On: input.raml, Source: SYStringNode)
            KeyValueNodeImpl (Start: 24 , End: 49, On: input.raml)
                StringNodeImpl: "value" (Start: -1 , End: -1)
                OverlayableStringNode: "price-ticketing-xp" (Start: 31 , End: 49, On: input.raml)
    KeyValueNodeImpl (Start: 50 , End: 163, On: input.raml)
        SYStringNode: "documentation" (Start: 50 , End: 63, On: input.raml)
        SYArrayNode (Start: 66 , End: 163, On: input.raml)
            DocumentationItemNode (Start: 68 , End: 163, On: input.raml, Source: SYObjectNode)
                KeyValueNodeImpl (Start: 68 , End: 93, On: input.raml)
                    SYStringNode: "title" (Start: 68 , End: 73, On: input.raml)
                    ObjectNodeImpl (Start: 75 , End: 93, On: input.raml, Source: SYStringNode)
                        KeyValueNodeImpl (Start: -1 , End: 93)
                            StringNodeImpl: "value" (Start: -1 , End: -1)
                            SYStringNode: "price-ticketing-xp" (Start: 75 , End: 93, On: input.raml, Source: SYStringNode)
                KeyValueNodeImpl (Start: 97 , End: 163, On: input.raml)
                    SYStringNode: "content" (Start: 97 , End: 104, On: input.raml)
                    ObjectNodeImpl (Start: 106 , End: 163, On: input.raml, Source: SYStringNode)
                        KeyValueNodeImpl (Start: -1 , End: 163)
                            StringNodeImpl: "value" (Start: -1 , End: -1)
                            SYStringNode: "Welcome to the price-ticketing-xp Documentation.
" (Start: 106 , End: 163, On: input.raml, Source: SYStringNode)
    KeyValueNodeImpl (Start: 163 , End: 225, On: input.raml)
        SYStringNode: "baseUri" (Start: 163 , End: 170, On: input.raml)
        ObjectNodeImpl (Start: 172 , End: 225, On: input.raml, Source: SYStringNode)
            KeyValueNodeImpl (Start: -1 , End: 225)
                StringNodeImpl: "value" (Start: -1 , End: -1)
                SYStringNode: "https://price-ticketing-xp-apps.de-c1.cloudhub.io/api" (Start: 172 , End: 225, On: input.raml, Source: SYStringNode)
    KeyValueNodeImpl (Start: 227 , End: 343, On: input.raml)
        SYStringNode: "uses" (Start: 227 , End: 231, On: input.raml)
        SYObjectNode (Start: 235 , End: 343, On: input.raml)
            LibraryNode (Start: 235 , End: 341, On: input.raml, Source: KeyValueNodeImpl)
                SYStringNode: "candaCommons" (Start: 235 , End: 247, On: input.raml)
                LibraryLinkNode exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 249 , End: 341, On: input.raml, Source: SYStringNode)
                    SYObjectNode (Start: 19 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                        KeyValueNodeImpl (Start: 19 , End: 125, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                            SYStringNode: "usage" (Start: 19 , End: 24, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                            ObjectNodeImpl (Start: 26 , End: 125, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                KeyValueNodeImpl (Start: -1 , End: 125)
                                    StringNodeImpl: "value" (Start: -1 , End: -1)
                                    SYStringNode: "This library defines some common concepts to be used throughout C&A's API specifications.
" (Start: 26 , End: 125, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                        KeyValueNodeImpl (Start: 125 , End: 321, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                            SYStringNode: "traits" (Start: 125 , End: 131, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                            SYObjectNode (Start: 135 , End: 321, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                TraitNode (Start: 135 , End: 321, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                    SYStringNode: "client-id-required" (Start: 135 , End: 153, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                    SYObjectNode (Start: 159 , End: 321, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 159 , End: 250, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "usage" (Start: 159 , End: 164, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            ObjectNodeImpl (Start: 166 , End: 250, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                KeyValueNodeImpl (Start: -1 , End: 250)
                                                    StringNodeImpl: "value" (Start: -1 , End: -1)
                                                    SYStringNode: "Apply this trait to every API/resource that is protected by "client-id enforcement"." (Start: 166 , End: 250, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                        KeyValueNodeImpl (Start: 255 , End: 319, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "description" (Start: 255 , End: 266, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            OverlayableObjectNodeImpl (Start: 268 , End: 319, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                KeyValueNodeImpl (Start: 255 , End: 319, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    StringNodeImpl: "value" (Start: -1 , End: -1)
                                                    OverlayableStringNode: "Access requires client credentials (ID and secret)." (Start: 268 , End: 319, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                        KeyValueNodeImpl (Start: 321 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                            SYStringNode: "resourceTypes" (Start: 321 , End: 334, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                            SYObjectNode (Start: 339 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                ResourceTypeNode (Start: 339 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                    SYStringNode: "ping" (Start: 339 , End: 343, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                    SYObjectNode (Start: 349 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 349 , End: 536, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "description" (Start: 349 , End: 360, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            OverlayableObjectNodeImpl (Start: 362 , End: 536, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                KeyValueNodeImpl (Start: 349 , End: 536, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    StringNodeImpl: "value" (Start: -1 , End: -1)
                                                    OverlayableStringNode: "Answers the current version of the deployed Mule application, possibly a value like "2018.6.1". Your implementation should always return **${muleapp.version.info}**.
" (Start: 362 , End: 536, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 540 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "get" (Start: 540 , End: 543, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYObjectNode (Start: 551 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                KeyValueNodeImpl (Start: 551 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYStringNode: "responses" (Start: 551 , End: 560, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYObjectNode (Start: 571 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                        KeyValueNodeImpl (Start: 571 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYIntegerNode: 200 (Start: 571 , End: 574, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYObjectNode (Start: 586 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                KeyValueNodeImpl (Start: 586 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYStringNode: "body" (Start: 586 , End: 590, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYObjectNode (Start: 604 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                        KeyValueNodeImpl (Start: 604 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                            SYStringNode: "text/plain" (Start: 604 , End: 614, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                            SYObjectNode (Start: 630 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                KeyValueNodeImpl (Start: 630 , End: 662, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                    SYStringNode: "example" (Start: 630 , End: 637, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                    SYStringNode: "${muleapp.version.info}" (Start: 639 , End: 662, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                ResourceTypeNode (Start: 665 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                    SYStringNode: "logLevel" (Start: 665 , End: 673, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                    SYObjectNode (Start: 681 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 681 , End: 735, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "description" (Start: 681 , End: 692, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            OverlayableObjectNodeImpl (Start: 694 , End: 735, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                KeyValueNodeImpl (Start: 681 , End: 735, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    StringNodeImpl: "value" (Start: -1 , End: -1)
                                                    OverlayableStringNode: "Change the severity of a specific logger." (Start: 694 , End: 735, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 742 , End: 935, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "uriParameters" (Start: 742 , End: 755, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYObjectNode (Start: 765 , End: 935, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                KeyValueNodeImpl (Start: 765 , End: 935, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYStringNode: "loggerName" (Start: 765 , End: 775, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYObjectNode (Start: 787 , End: 935, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                        KeyValueNodeImpl (Start: 787 , End: 848, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYStringNode: "description" (Start: 787 , End: 798, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            OverlayableObjectNodeImpl (Start: 800 , End: 848, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                                KeyValueNodeImpl (Start: 787 , End: 848, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                    OverlayableStringNode: "Name of the logger whose level is to be changed." (Start: 800 , End: 848, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                        KeyValueNodeImpl (Start: 859 , End: 871, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYStringNode: "type" (Start: 859 , End: 863, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            NativeTypeExpressionNode: "string" (Start: 865 , End: 871, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                        KeyValueNodeImpl (Start: 882 , End: 896, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYStringNode: "required" (Start: 882 , End: 890, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYBooleanNode: true (Start: 892 , End: 896, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                        KeyValueNodeImpl (Start: 907 , End: 928, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYStringNode: "example" (Start: 907 , End: 914, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYStringNode: "org.apache" (Start: 916 , End: 928, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 935 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "put" (Start: 935 , End: 938, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYObjectNode (Start: 948 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                KeyValueNodeImpl (Start: 948 , End: 1102, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYStringNode: "body" (Start: 948 , End: 952, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYObjectNode (Start: 964 , End: 1102, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                        KeyValueNodeImpl (Start: 964 , End: 1102, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYStringNode: "application/json" (Start: 964 , End: 980, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYObjectNode (Start: 994 , End: 1102, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                KeyValueNodeImpl (Start: 994 , End: 1039, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYStringNode: "example" (Start: 994 , End: 1001, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    StringNodeImpl: "{
	"newLevel": "DEBUG"
}" (Start: 1003 , End: 1039, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYIncludeNode)
                                                                KeyValueNodeImpl (Start: 1052 , End: 1093, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYStringNode: "type" (Start: 1052 , End: 1056, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    StringNodeImpl: "{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"type": "object",
	"title": "change  a certain log level",
	"properties": {
		"newLevel": {
			"type": "string",
			"description": "The new log level to be set.",
			"enum": [
				"OFF",
				"ERROR",
				"WARN",
				"INFO",
				"DEBUG",
				"TRACE"
			]
		},
		"createFlag": {
			"description": "Optional parameter to create a logger in case it does not exist (to avoid typo errors for existing loggers).",
			"type": "boolean"
		},
		"hoursToReset": {
			"description": "Delay in hours after which time the logger is set back to its original log level.",
			"type": "integer"
		}
	},
	"required": [
		"newLevel"
	]
}" (Start: 1058 , End: 1093, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYIncludeNode)
                                                KeyValueNodeImpl (Start: 1102 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYStringNode: "responses" (Start: 1102 , End: 1111, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYObjectNode (Start: 1123 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                        KeyValueNodeImpl (Start: 1123 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYIntegerNode: 200 (Start: 1123 , End: 1126, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYObjectNode (Start: 1140 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                KeyValueNodeImpl (Start: 1140 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYStringNode: "body" (Start: 1140 , End: 1144, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYObjectNode (Start: 1160 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                        KeyValueNodeImpl (Start: 1160 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                            SYStringNode: "application/json" (Start: 1160 , End: 1176, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                            SYObjectNode (Start: 1194 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                KeyValueNodeImpl (Start: 1194 , End: 1411, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                    SYStringNode: "description" (Start: 1194 , End: 1205, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                    OverlayableObjectNodeImpl (Start: 1207 , End: 1411, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                                                        KeyValueNodeImpl (Start: 1194 , End: 1411, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                            StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                                            OverlayableStringNode: "Add 
"#[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)]" 
to your generated set-payload flow element.
" (Start: 1207 , End: 1411, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                KeyValueNodeImpl (Start: 1427 , End: 1481, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                    SYStringNode: "example" (Start: 1427 , End: 1434, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                    StringNodeImpl: "{
  "message" : "TODO you need to replace this generated setpayload by #[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)] in the api.xml"
}" (Start: 1436 , End: 1481, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYIncludeNode)
                                                                                KeyValueNodeImpl (Start: 1498 , End: 1548, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                    SYStringNode: "type" (Start: 1498 , End: 1502, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                                    StringNodeImpl: "{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "message": {
      "description":"the human readable result of the changeLogLevel operation.",
      "type": "string"
    }
  }
}" (Start: 1504 , End: 1548, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYIncludeNode)
                        KeyValueNodeImpl (Start: 1550 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                            SYStringNode: "securitySchemes" (Start: 1550 , End: 1565, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                            SYObjectNode (Start: 1569 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                SecuritySchemeNode (Start: 1569 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                    SYStringNode: "basicAuth" (Start: 1569 , End: 1578, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                    SYObjectNode (Start: 1584 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 1584 , End: 1617, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "displayName" (Start: 1584 , End: 1595, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            OverlayableObjectNodeImpl (Start: 1597 , End: 1617, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                KeyValueNodeImpl (Start: 1584 , End: 1617, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    StringNodeImpl: "value" (Start: -1 , End: -1)
                                                    OverlayableStringNode: "Basic Authentication" (Start: 1597 , End: 1617, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 1622 , End: 1750, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "description" (Start: 1622 , End: 1633, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            OverlayableObjectNodeImpl (Start: 1635 , End: 1750, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                KeyValueNodeImpl (Start: 1622 , End: 1750, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    StringNodeImpl: "value" (Start: -1 , End: -1)
                                                    OverlayableStringNode: "This API supports Basic Authentication. The client has to provide an "Authorization" header with valid credentials." (Start: 1635 , End: 1750, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 1755 , End: 1781, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "type" (Start: 1755 , End: 1759, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "Basic Authentication" (Start: 1761 , End: 1781, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                        KeyValueNodeImpl (Start: 1786 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYStringNode: "describedBy" (Start: 1786 , End: 1797, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                            SYObjectNode (Start: 1805 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                KeyValueNodeImpl (Start: 1805 , End: 1967, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYStringNode: "headers" (Start: 1805 , End: 1812, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYObjectNode (Start: 1822 , End: 1967, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                        PropertyNode (Start: 1822 , End: 1967, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                            SYStringNode: "Authorization" (Start: 1822 , End: 1835, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            TypeDeclarationNode (Start: 1847 , End: 1967, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                                                                KeyValueNodeImpl (Start: 1847 , End: 1891, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYStringNode: "description" (Start: 1847 , End: 1858, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    OverlayableObjectNodeImpl (Start: 1860 , End: 1891, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                                        KeyValueNodeImpl (Start: 1847 , End: 1891, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                            StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                            OverlayableStringNode: "Used to send valid credentials." (Start: 1860 , End: 1891, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                KeyValueNodeImpl (Start: 1902 , End: 1914, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYStringNode: "type" (Start: 1902 , End: 1906, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    NativeTypeExpressionNode: "string" (Start: 1908 , End: 1914, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                                ExampleDeclarationNode (Start: 1925 , End: 1960, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                                    SYStringNode: "example" (Start: 1925 , End: 1932, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYStringNode: "Basic ax5Gdza5OnJpZnG4Z2ok" (Start: 1934 , End: 1960, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                KeyValueNodeImpl (Start: -1 , End: -1)
                                                                    StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                    ObjectNodeImpl (Start: -1 , End: -1)
                                                                        KeyValueNodeImpl (Start: -1 , End: -1)
                                                                            StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                            OverlayableStringNode: "Authorization" (Start: -1 , End: -1, Source: SYStringNode)
                                                KeyValueNodeImpl (Start: 1967 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYStringNode: "responses" (Start: 1967 , End: 1976, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                    SYObjectNode (Start: 1986 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                        ResponseNode (Start: 1986 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                            SYIntegerNode: 401 (Start: 1986 , End: 1989, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                            SYObjectNode (Start: 2001 , End: 2079, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                KeyValueNodeImpl (Start: 2001 , End: 2078, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    SYStringNode: "description" (Start: 2001 , End: 2012, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                    OverlayableObjectNodeImpl (Start: 2014 , End: 2078, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                                        KeyValueNodeImpl (Start: 2001 , End: 2078, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                            StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                            OverlayableStringNode: "Credentials are missing or could not be validated by the server." (Start: 2014 , End: 2078, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml)
                                                                KeyValueNodeImpl (Start: -1 , End: -1)
                                                                    StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                    ObjectNodeImpl (Start: -1 , End: -1)
                                                                        KeyValueNodeImpl (Start: -1 , End: -1)
                                                                            StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                            OverlayableStringNode: "401" (Start: -1 , End: -1, Source: SYIntegerNode)
                                                KeyValueNodeImpl (Start: -1 , End: -1)
                                                    StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                    ObjectNodeImpl (Start: -1 , End: -1)
                                                        KeyValueNodeImpl (Start: -1 , End: -1)
                                                            StringNodeImpl: "value" (Start: -1 , End: -1)
                                                            OverlayableStringNode: "describedBy" (Start: -1 , End: -1, Source: SYStringNode)
    KeyValueNodeImpl (Start: 343 , End: 378, On: input.raml)
        SYStringNode: "securedBy" (Start: 343 , End: 352, On: input.raml)
        SYArrayNode (Start: 354 , End: 378, On: input.raml)
            SecuritySchemeRefNode basicAuth -> {SecuritySchemeNode RefStart: 1569 , RefEnd: 2079} (Start: 355 , End: 377, On: input.raml, Source: SYStringNode)
                LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 356 , End: 378, On: input.raml)
    ResourceNode (Start: 380 , End: 2579, On: input.raml, Source: KeyValueNodeImpl)
        SYStringNode: "/suppliers" (Start: 380 , End: 390, On: input.raml)
        SYObjectNode (Start: 394 , End: 2579, On: input.raml)
            KeyValueNodeImpl (Start: 394 , End: 454, On: input.raml)
                SYStringNode: "description" (Start: 394 , End: 405, On: input.raml)
                OverlayableObjectNodeImpl (Start: 407 , End: 454, On: input.raml, Source: SYStringNode)
                    KeyValueNodeImpl (Start: 394 , End: 454, On: input.raml)
                        StringNodeImpl: "value" (Start: -1 , End: -1)
                        OverlayableStringNode: "The resource provides the API for the supplier." (Start: 407 , End: 454, On: input.raml)
            ResourceNode (Start: 457 , End: 2579, On: input.raml, Source: KeyValueNodeImpl)
                SYStringNode: "/shipmentTicketRequests" (Start: 457 , End: 480, On: input.raml)
                SYObjectNode (Start: 486 , End: 2579, On: input.raml)
                    KeyValueNodeImpl (Start: 486 , End: 625, On: input.raml)
                        SYStringNode: "description" (Start: 486 , End: 497, On: input.raml)
                        OverlayableObjectNodeImpl (Start: 499 , End: 625, On: input.raml, Source: SYStringNode)
                            KeyValueNodeImpl (Start: 486 , End: 625, On: input.raml)
                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                OverlayableStringNode: "This resource provides ticket print information for multiple companies based on the shipment attributes of the purchase order." (Start: 499 , End: 625, On: input.raml)
                    KeyValueNodeImpl (Start: 630 , End: 669, On: input.raml)
                        SYStringNode: "is" (Start: 630 , End: 632, On: input.raml)
                        SYArrayNode (Start: 634 , End: 669, On: input.raml)
                            TraitRefNode client-id-required -> {TraitNode RefStart: 135 , RefEnd: 321} (Start: 636 , End: 667, On: input.raml, Source: SYStringNode)
                                LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 637 , End: 668, On: input.raml)
                    MethodNode (Start: 674 , End: 1170, On: input.raml, Source: KeyValueNodeImpl)
                        SYStringNode: "post" (Start: 674 , End: 678, On: input.raml)
                        SYObjectNode (Start: 686 , End: 1170, On: input.raml)
                            KeyValueNodeImpl (Start: 686 , End: 736, On: input.raml)
                                SYStringNode: "description" (Start: 686 , End: 697, On: input.raml)
                                OverlayableObjectNodeImpl (Start: 699 , End: 736, On: input.raml, Source: SYStringNode)
                                    KeyValueNodeImpl (Start: 686 , End: 736, On: input.raml)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "Request data via shipment attributes." (Start: 699 , End: 736, On: input.raml)
                            BodyNode (Start: 743 , End: 933, On: input.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "body" (Start: 743 , End: 747, On: input.raml)
                                SYObjectNode (Start: 757 , End: 933, On: input.raml)
                                    KeyValueNodeImpl (Start: 757 , End: 933, On: input.raml)
                                        SYStringNode: "application/json" (Start: 757 , End: 773, On: input.raml)
                                        TypeDeclarationNode (Start: 785 , End: 933, On: input.raml, Source: SYObjectNode)
                                            ExampleDeclarationNode (Start: 785 , End: 852, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "example" (Start: 785 , End: 792, On: input.raml)
                                                StringNodeImpl: "{
	"supplierNumber": 99999,
	"classificationNumber": 999,
	"codeNumber": 99,
	"serialNumber": 999,
	"shipmentNumber": 999,
	"masterCompanyIsoCodes": [
		"DE",
		"NL",
		"FR"
	],
	"allMasterCompanies": false,
	"requestedTicketType": 105,
	"ticketRequestReason": "FirstRequest",
	"creationTimestamp": "2018-12-31T23:59:59.999Z"
}" (Start: 794 , End: 852, On: input.raml, Source: SYIncludeNode)
                                            KeyValueNodeImpl (Start: 863 , End: 926, On: input.raml)
                                                SYStringNode: "type" (Start: 863 , End: 867, On: input.raml)
                                                ExternalSchemaTypeExpressionNode: "{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "Representation of a ticket request for multiple companies based on the shipment attributes of the purchase order.",
	"type": "object",
	"additionalProperties": false,
	"required": [
		"supplierNumber",
		"classificationNumber",
		"codeNumber",
		"serialNumber",
		"shipmentNumber",
		"ticketRequestReason"
	],
	"properties": {
		"supplierNumber": {
			"type": "integer",
			"description": "The merchandise supplier number",
			"minimum": 0,
			"maximum": 99999
		},
		"classificationNumber": {
			"type": "integer",
			"description": "The classification number",
			"minimum": 0,
			"maximum": 999
		},
		"codeNumber": {
			"type": "integer",
			"description": "The code number",
			"minimum": 0,
			"maximum": 99
		},
		"serialNumber": {
			"type": "integer",
			"description": "The serial number",
			"minimum": 0,
			"maximum": 999
		},
		"shipmentNumber": {
			"type": "integer",
			"description": "The shipment number",
			"minimum": 0,
			"maximum": 999
		},
		"masterCompanyIsoCodes": {
			"type": "array",
			"minItems": 1,
			"description": "List of master companies that are relevant for the request",
			"items": {
				"type": "string",
				"description": "The country iso code",
				"minLength": 2,
				"maxLength": 2,
				"pattern": "^[A-Z]{2}$",
				"examples": [
					"DE"
				]
			}
		},
		"allMasterCompanies": {
			"type": "boolean",
			"description": "This flag indicates that all master companies of the purchase order are requested (when true no masterCompanyIsoCodes must be set)"
		},
		"ticketRequestReason": {
			"type": "string",
			"description": "The ticket request reason",
			"enum": [
				"FirstRequest",
				"AddOnRequest",
				"PriceChangeDown",
				"PriceChangeUp",
				"CountryReAllocation",
				"OrderNumberChange",
				"TicketInfoChange"
			]
		},
		"requestedTicketType": {
			"type": "integer",
			"description": "The requested ticket type (only relevant for TAO users)",
			"minimum": 0,
			"maximum": 32767
		},
		"creationTimestamp": {
			"description": "User defined timestamp at which the request was created by the ticket provider",
			"type": "string",
			"format": "datetime"
		}
	}
}" (Start: 869 , End: 926, On: input.raml, Source: StringNodeImpl)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                            KeyValueNodeImpl (Start: 933 , End: 1170, On: input.raml)
                                SYStringNode: "responses" (Start: 933 , End: 942, On: input.raml)
                                SYObjectNode (Start: 952 , End: 1170, On: input.raml)
                                    ResponseNode (Start: 952 , End: 1170, On: input.raml, Source: KeyValueNodeImpl)
                                        SYIntegerNode: 200 (Start: 952 , End: 955, On: input.raml)
                                        SYObjectNode (Start: 967 , End: 1170, On: input.raml)
                                            BodyNode (Start: 967 , End: 1170, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "body" (Start: 967 , End: 971, On: input.raml)
                                                SYObjectNode (Start: 985 , End: 1170, On: input.raml)
                                                    KeyValueNodeImpl (Start: 985 , End: 1170, On: input.raml)
                                                        SYStringNode: "application/json" (Start: 985 , End: 1001, On: input.raml)
                                                        TypeDeclarationNode (Start: 1017 , End: 1170, On: input.raml, Source: SYObjectNode)
                                                            ExampleDeclarationNode (Start: 1017 , End: 1085, On: input.raml, Source: KeyValueNodeImpl)
                                                                SYStringNode: "example" (Start: 1017 , End: 1024, On: input.raml)
                                                                StringNodeImpl: "{
  "ticketRequestId": "567a5eae74d543bcadbfeb165c37a0e6",
  "responseCode": 0,
  "responseType": "Info",
  "responseMessage": "No error occured during validation",
  "ticketType": 105,
  "oekotexFlag": true,
  "nosSeasonIndicator": "SNOS",
  "orderNumber": "705/32/77580/656",
  "purchaseOrderNumber": 80792995,
  "masterCompanies": [
    {
      "companyIsoCode": "AT",
      "itemNumber": "0123.456",
      "ticketInfoText": "CB:07_THEM _PR_TA02",
      "nationalStyleIdPrefix": "S820",
      "customerSizeRange": "XS - XXL",
      "sellingPrices": [
        {
          "companyIsoCode": "AT",
          "sellingPrice": "8.00",
          "currencyCode": "EURO",
          "sellingPriceTicketPosition": 1,
          "printedCompanyIdentifier": "A",
          "licensePlateCompanyIdentifier": "AT"
        },
        {
          "companyIsoCode": "RO",
          "sellingPrice": "34.90",
          "currencyCode": "RON",
          "sellingPriceTicketPosition": 2,
          "printedCompanyIdentifier": "RO",
          "licensePlateCompanyIdentifier": "RO"
        }
      ],
      "colourSizes": [
        {
          "colourTicketPositionNumber": "1",
          "computerSizeNumber": "056",
          "quantity": 150,
          "pantoneName": "16-5803",
          "colourDescription": "Flint Gray",
          "customerSizeNumber": "M",
          "additionalSizeInformation": "0-1 MON",
          "gtin": "04 061507 789603",
          "url": "https://qr.c-a.com/?01=04061507789603",
          "barcode": {
            "lineIdentifier": "A",
            "itemNumber": "0123456",
            "colourTicketPositionNumber": "1",
            "computerSizeNumber": "056"
          },
          "barcodeSubLine": {
            "lineIdentifier": "A",
            "itemNumber": "0123.456",
            "colourTicketPositionNumber": "1",
            "computerSizeNumber": "056"
          },
          "waistbandRiderCode": 13,
          "waistbandRiderColour": "yellow",
          "waistbandRiderText": "WEITE PASSWORM"
        }
      ]
    }
  ]
}" (Start: 1026 , End: 1085, On: input.raml, Source: SYIncludeNode)
                                                            KeyValueNodeImpl (Start: 1100 , End: 1164, On: input.raml)
                                                                SYStringNode: "type" (Start: 1100 , End: 1104, On: input.raml)
                                                                ExternalSchemaTypeExpressionNode: "{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Representation of the ticket print information (with 'preformatted' values)",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "ticketRequestId",
    "responseCode",
    "responseType"
  ],
  "properties": {
    "ticketRequestId": {
      "type": "string",
      "description": "The ticket request id. (generated during the creation of ticket print information)",
      "minimum": 32,
      "maximum": 32
    },
    "responseCode": {
      "type": "integer",
      "description": "The response code from the validation process",
      "minimum": 0,
      "maximum": 99999
    },
    "responseType": {
      "type": "string",
      "description": "The response type from the validation process ('Info' indicates that there were no issues during processing)",
      "enum": [
        "Info",
        "Warning",
        "Error"
      ]
    },
    "responseMessage": {
      "type": "string",
      "description": "The detailed response message from the validation process",
      "minLength": 1,
      "maxLength": 500
    },
    "ticketType": {
      "type": "integer",
      "description": "The ticket type being produced.",
      "minimum": 0,
      "maximum": 9999
    },
    "oekotexFlag": {
      "type": "boolean",
      "description": "Indicates whether it deals about oeko merchandise or not."
    },
    "nosSeasonIndicator": {
      "type": "string",
      "description": "The nos season indicator",
      "minLength": 1,
      "maxLength": 4
    },
    "orderNumber": {
      "type": "string",
      "description": "The order number",
      "minLength": 16,
      "maxLength": 16
    },
    "purchaseOrderNumber": {
      "type": "integer",
      "description": "The purchase order number corresponding to the parameters of the ticket request.",
      "minimum": 1,
      "maximum": 9999999999
    },
    "masterCompanies": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyIsoCode",
          "itemNumber",
          "sellingPrices",
          "colourSizes"
        ],
        "properties": {
          "companyIsoCode": {
            "type": "string",
            "description": "The country iso code is the identifier of a master company",
            "minLength": 2,
            "maxLength": 2,
            "pattern": "^[A-Z]{2}$",
            "examples": [
              "DE"
            ]
          },
          "ticketInfoText": {
            "type": "string",
            "description": "Information that might be printed on the ticket",
            "minLength": 1,
            "maxLength": 20
          },
          "customerSizeRange": {
            "type": "string",
            "description": "The customer size range",
            "minLength": 1,
            "maxLength": 15
          },
          "itemNumber": {
            "type": "string",
            "description": "The item number with leading zeroes",
            "minLength": 8,
            "maxLength": 8
          },
          "nationalStyleIdPrefix": {
            "type": "string",
            "description": "The national style identifier prefix",
            "minLength": 1,
            "maxLength": 4
          },
          "sellingPrices": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "companyIsoCode",
                "sellingPrice",
                "currencyCode",
                "printedCompanyIdentifier",
                "sellingPriceTicketPosition"
              ],
              "properties": {
                "companyIsoCode": {
                  "type": "string",
                  "description": "The country iso code of the respective country",
                  "minLength": 2,
                  "maxLength": 2,
                  "pattern": "^[A-Z]{2}$",
                  "examples": [
                    "DE"
                  ]
                },
                "sellingPrice": {
                  "type": "string",
                  "description": "The selling price",
                  "minLength": 4,
                  "maxLength": 8
                },
                "currencyCode": {
                  "type": "string",
                  "description": "The currency code",
                  "minLength": 1,
                  "maxLength": 5
                },
                "printedCompanyIdentifier": {
                  "type": "string",
                  "description": "The printed company identifier",
                  "minLength": 1,
                  "maxLength": 2
                },
                "sellingPriceTicketPosition": {
                  "type": "integer",
                  "description": "The selling price position on the ticket",
                  "minimum": 1,
                  "maximum": 2
                },
                "licensePlateCompanyIdentifier": {
                  "type": "string",
                  "description": "The license plate company identifier",
                  "minLength": 2,
                  "maxLength": 2,
                  "pattern": "^[A-Z]{2}$",
                  "examples": [
                    "DE"
                  ]
                }
              }
            }
          },
          "colourSizes": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "colourTicketPositionNumber",
                "computerSizeNumber",
                "quantity",
                "barcode",
                "barcodeSubLine"
              ],
              "properties": {
                "colourTicketPositionNumber": {
                  "type": "string",
                  "description": "The colour ticket position number",
                  "minLength": 1,
                  "maxLength": 1
                },
                "computerSizeNumber": {
                  "type": "string",
                  "description": "The computer size number",
                  "minLength": 3,
                  "maxLength": 3
                },
                "quantity": {
                  "type": "integer",
                  "description": "The quantity of a colour size combination",
                  "minimum": 1,
                  "maximum": 999999
                },
                "pantoneName": {
                  "type": "string",
                  "description": "The pantone name of the colour",
                  "minLength": 1,
                  "maxLength": 70
                },
                "colourDescription": {
                  "type": "string",
                  "description": "The colour description",
                  "minLength": 1,
                  "maxLength": 60
                },
                "customerSizeNumber": {
                  "type": "string",
                  "description": "The customer size number of that specific small company",
                  "minLength": 1,
                  "maxLength": 7
                },
                "additionalSizeInformation": {
                  "type": "string",
                  "description": "An additional size information",
                  "minLength": 1,
                  "maxLength": 12
                },
                "gtin": {
                  "type": "string",
                  "description": "The Global Trade Item Number",
                  "minLength": 16,
                  "maxLength": 16
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URI to the product in the C and A online shop (used for the 2D barcode)",
                  "minLength": 1,
                  "maxLength": 500
                },
                "barcode": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "lineIdentifier",
                    "itemNumber",
                    "colourTicketPositionNumber",
                    "computerSizeNumber"
                  ],
                  "properties": {
                    "lineIdentifier": {
                      "type": "string",
                      "description": "The line identifier",
                      "minLength": 1,
                      "maxLength": 2
                    },
                    "itemNumber": {
                      "type": "string",
                      "description": "The item number",
                      "minLength": 7,
                      "maxLength": 7
                    },
                    "colourTicketPositionNumber": {
                      "type": "string",
                      "description": "The colour ticket position number",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "computerSizeNumber": {
                      "type": "string",
                      "description": "The computer size number",
                      "minLength": 3,
                      "maxLength": 3
                    }
                  }
                },
                "barcodeSubLine": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "lineIdentifier",
                    "itemNumber",
                    "colourTicketPositionNumber",
                    "computerSizeNumber"
                  ],
                  "properties": {
                    "lineIdentifier": {
                      "type": "string",
                      "description": "The line identifier",
                      "minLength": 1,
                      "maxLength": 2
                    },
                    "itemNumber": {
                      "type": "string",
                      "description": "The item number",
                      "minLength": 8,
                      "maxLength": 8
                    },
                    "colourTicketPositionNumber": {
                      "type": "string",
                      "description": "The colour ticket position number",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "computerSizeNumber": {
                      "type": "string",
                      "description": "The computer size number",
                      "minLength": 3,
                      "maxLength": 3
                    }
                  }
                },
                "waistbandRiderCode": {
                  "type": "integer",
                  "description": "The code for the waistband rider",
                  "minimum": 0,
                  "maximum": 99
                },
                "waistbandRiderColour": {
                  "type": "string",
                  "description": "The colour of the waistband rider",
                  "minLength": 1,
                  "maxLength": 32
                },
                "waistbandRiderText": {
                  "type": "string",
                  "description": "The text for the waistband rider",
                  "minLength": 1,
                  "maxLength": 35
                }
              }
            }
          }
        }
      }
    }
  }
}" (Start: 1106 , End: 1164, On: input.raml, Source: StringNodeImpl)
                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                        OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "200" (Start: -1 , End: -1, Source: SYIntegerNode)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                ObjectNodeImpl (Start: -1 , End: -1)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "post" (Start: -1 , End: -1, Source: SYStringNode)
                    ResourceNode (Start: 1170 , End: 2579, On: input.raml, Source: KeyValueNodeImpl)
                        SYStringNode: "/{ticketRequestId}" (Start: 1170 , End: 1188, On: input.raml)
                        SYObjectNode (Start: 1196 , End: 2579, On: input.raml)
                            KeyValueNodeImpl (Start: 1196 , End: 1283, On: input.raml)
                                SYStringNode: "description" (Start: 1196 , End: 1207, On: input.raml)
                                OverlayableObjectNodeImpl (Start: 1209 , End: 1283, On: input.raml, Source: SYStringNode)
                                    KeyValueNodeImpl (Start: 1196 , End: 1283, On: input.raml)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "This resource provides amend functionality for an existing ticket request." (Start: 1209 , End: 1283, On: input.raml)
                            KeyValueNodeImpl (Start: 1290 , End: 1329, On: input.raml)
                                SYStringNode: "is" (Start: 1290 , End: 1292, On: input.raml)
                                SYArrayNode (Start: 1294 , End: 1329, On: input.raml)
                                    TraitRefNode client-id-required -> {TraitNode RefStart: 135 , RefEnd: 321} (Start: 1296 , End: 1327, On: input.raml, Source: SYStringNode)
                                        LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 1297 , End: 1328, On: input.raml)
                            KeyValueNodeImpl (Start: 1336 , End: 1571, On: input.raml)
                                SYStringNode: "uriParameters" (Start: 1336 , End: 1349, On: input.raml)
                                SYObjectNode (Start: 1359 , End: 1571, On: input.raml)
                                    PropertyNode (Start: 1359 , End: 1571, On: input.raml, Source: KeyValueNodeImpl)
                                        SYStringNode: "ticketRequestId" (Start: 1359 , End: 1374, On: input.raml)
                                        TypeDeclarationNode (Start: 1386 , End: 1571, On: input.raml, Source: SYObjectNode)
                                            KeyValueNodeImpl (Start: 1386 , End: 1414, On: input.raml)
                                                SYStringNode: "description" (Start: 1386 , End: 1397, On: input.raml)
                                                OverlayableObjectNodeImpl (Start: 1399 , End: 1414, On: input.raml, Source: SYStringNode)
                                                    KeyValueNodeImpl (Start: 1386 , End: 1414, On: input.raml)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "ticketRequestId" (Start: 1399 , End: 1414, On: input.raml)
                                            KeyValueNodeImpl (Start: 1425 , End: 1437, On: input.raml)
                                                SYStringNode: "type" (Start: 1425 , End: 1429, On: input.raml)
                                                NativeTypeExpressionNode: "string" (Start: 1431 , End: 1437, On: input.raml, Source: SYStringNode)
                                            FacetNode (Start: 1448 , End: 1461, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "minLength" (Start: 1448 , End: 1457, On: input.raml)
                                                SYIntegerNode: 32 (Start: 1459 , End: 1461, On: input.raml)
                                            FacetNode (Start: 1472 , End: 1485, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "maxLength" (Start: 1472 , End: 1481, On: input.raml)
                                                SYIntegerNode: 32 (Start: 1483 , End: 1485, On: input.raml)
                                            KeyValueNodeImpl (Start: 1496 , End: 1510, On: input.raml)
                                                SYStringNode: "required" (Start: 1496 , End: 1504, On: input.raml)
                                                SYBooleanNode: true (Start: 1506 , End: 1510, On: input.raml)
                                            ExampleDeclarationNode (Start: 1521 , End: 1564, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "example" (Start: 1521 , End: 1528, On: input.raml)
                                                SYStringNode: "567a5eae74d543bcadbfeb165c37a0e6" (Start: 1530 , End: 1564, On: input.raml)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "ticketRequestId" (Start: -1 , End: -1, Source: SYStringNode)
                            MethodNode (Start: 1571 , End: 1926, On: input.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "get" (Start: 1571 , End: 1574, On: input.raml)
                                SYObjectNode (Start: 1584 , End: 1926, On: input.raml)
                                    KeyValueNodeImpl (Start: 1584 , End: 1668, On: input.raml)
                                        SYStringNode: "description" (Start: 1584 , End: 1595, On: input.raml)
                                        OverlayableObjectNodeImpl (Start: 1597 , End: 1668, On: input.raml, Source: SYStringNode)
                                            KeyValueNodeImpl (Start: 1584 , End: 1668, On: input.raml)
                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                OverlayableStringNode: "Retrieve updated ticket print information for the given ticketRequestId" (Start: 1597 , End: 1668, On: input.raml)
                                    KeyValueNodeImpl (Start: 1677 , End: 1926, On: input.raml)
                                        SYStringNode: "responses" (Start: 1677 , End: 1686, On: input.raml)
                                        SYObjectNode (Start: 1698 , End: 1926, On: input.raml)
                                            ResponseNode (Start: 1698 , End: 1926, On: input.raml, Source: KeyValueNodeImpl)
                                                SYIntegerNode: 200 (Start: 1698 , End: 1701, On: input.raml)
                                                SYObjectNode (Start: 1715 , End: 1926, On: input.raml)
                                                    BodyNode (Start: 1715 , End: 1926, On: input.raml, Source: KeyValueNodeImpl)
                                                        SYStringNode: "body" (Start: 1715 , End: 1719, On: input.raml)
                                                        SYObjectNode (Start: 1735 , End: 1926, On: input.raml)
                                                            KeyValueNodeImpl (Start: 1735 , End: 1926, On: input.raml)
                                                                SYStringNode: "application/json" (Start: 1735 , End: 1751, On: input.raml)
                                                                TypeDeclarationNode (Start: 1769 , End: 1926, On: input.raml, Source: SYObjectNode)
                                                                    ExampleDeclarationNode (Start: 1769 , End: 1837, On: input.raml, Source: KeyValueNodeImpl)
                                                                        SYStringNode: "example" (Start: 1769 , End: 1776, On: input.raml)
                                                                        StringNodeImpl: "{
  "ticketRequestId": "567a5eae74d543bcadbfeb165c37a0e6",
  "responseCode": 0,
  "responseType": "Info",
  "responseMessage": "No error occured during validation",
  "ticketType": 105,
  "oekotexFlag": true,
  "nosSeasonIndicator": "SNOS",
  "orderNumber": "705/32/77580/656",
  "purchaseOrderNumber": 80792995,
  "masterCompanies": [
    {
      "companyIsoCode": "AT",
      "itemNumber": "0123.456",
      "ticketInfoText": "CB:07_THEM _PR_TA02",
      "nationalStyleIdPrefix": "S820",
      "customerSizeRange": "XS - XXL",
      "sellingPrices": [
        {
          "companyIsoCode": "AT",
          "sellingPrice": "8.00",
          "currencyCode": "EURO",
          "sellingPriceTicketPosition": 1,
          "printedCompanyIdentifier": "A",
          "licensePlateCompanyIdentifier": "AT"
        },
        {
          "companyIsoCode": "RO",
          "sellingPrice": "34.90",
          "currencyCode": "RON",
          "sellingPriceTicketPosition": 2,
          "printedCompanyIdentifier": "RO",
          "licensePlateCompanyIdentifier": "RO"
        }
      ],
      "colourSizes": [
        {
          "colourTicketPositionNumber": "1",
          "computerSizeNumber": "056",
          "quantity": 150,
          "pantoneName": "16-5803",
          "colourDescription": "Flint Gray",
          "customerSizeNumber": "M",
          "additionalSizeInformation": "0-1 MON",
          "gtin": "04 061507 789603",
          "url": "https://qr.c-a.com/?01=04061507789603",
          "barcode": {
            "lineIdentifier": "A",
            "itemNumber": "0123456",
            "colourTicketPositionNumber": "1",
            "computerSizeNumber": "056"
          },
          "barcodeSubLine": {
            "lineIdentifier": "A",
            "itemNumber": "0123.456",
            "colourTicketPositionNumber": "1",
            "computerSizeNumber": "056"
          },
          "waistbandRiderCode": 13,
          "waistbandRiderColour": "yellow",
          "waistbandRiderText": "WEITE PASSWORM"
        }
      ]
    }
  ]
}" (Start: 1778 , End: 1837, On: input.raml, Source: SYIncludeNode)
                                                                    KeyValueNodeImpl (Start: 1854 , End: 1918, On: input.raml)
                                                                        SYStringNode: "type" (Start: 1854 , End: 1858, On: input.raml)
                                                                        ExternalSchemaTypeExpressionNode: "{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Representation of the ticket print information (with 'preformatted' values)",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "ticketRequestId",
    "responseCode",
    "responseType"
  ],
  "properties": {
    "ticketRequestId": {
      "type": "string",
      "description": "The ticket request id. (generated during the creation of ticket print information)",
      "minimum": 32,
      "maximum": 32
    },
    "responseCode": {
      "type": "integer",
      "description": "The response code from the validation process",
      "minimum": 0,
      "maximum": 99999
    },
    "responseType": {
      "type": "string",
      "description": "The response type from the validation process ('Info' indicates that there were no issues during processing)",
      "enum": [
        "Info",
        "Warning",
        "Error"
      ]
    },
    "responseMessage": {
      "type": "string",
      "description": "The detailed response message from the validation process",
      "minLength": 1,
      "maxLength": 500
    },
    "ticketType": {
      "type": "integer",
      "description": "The ticket type being produced.",
      "minimum": 0,
      "maximum": 9999
    },
    "oekotexFlag": {
      "type": "boolean",
      "description": "Indicates whether it deals about oeko merchandise or not."
    },
    "nosSeasonIndicator": {
      "type": "string",
      "description": "The nos season indicator",
      "minLength": 1,
      "maxLength": 4
    },
    "orderNumber": {
      "type": "string",
      "description": "The order number",
      "minLength": 16,
      "maxLength": 16
    },
    "purchaseOrderNumber": {
      "type": "integer",
      "description": "The purchase order number corresponding to the parameters of the ticket request.",
      "minimum": 1,
      "maximum": 9999999999
    },
    "masterCompanies": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyIsoCode",
          "itemNumber",
          "sellingPrices",
          "colourSizes"
        ],
        "properties": {
          "companyIsoCode": {
            "type": "string",
            "description": "The country iso code is the identifier of a master company",
            "minLength": 2,
            "maxLength": 2,
            "pattern": "^[A-Z]{2}$",
            "examples": [
              "DE"
            ]
          },
          "ticketInfoText": {
            "type": "string",
            "description": "Information that might be printed on the ticket",
            "minLength": 1,
            "maxLength": 20
          },
          "customerSizeRange": {
            "type": "string",
            "description": "The customer size range",
            "minLength": 1,
            "maxLength": 15
          },
          "itemNumber": {
            "type": "string",
            "description": "The item number with leading zeroes",
            "minLength": 8,
            "maxLength": 8
          },
          "nationalStyleIdPrefix": {
            "type": "string",
            "description": "The national style identifier prefix",
            "minLength": 1,
            "maxLength": 4
          },
          "sellingPrices": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "companyIsoCode",
                "sellingPrice",
                "currencyCode",
                "printedCompanyIdentifier",
                "sellingPriceTicketPosition"
              ],
              "properties": {
                "companyIsoCode": {
                  "type": "string",
                  "description": "The country iso code of the respective country",
                  "minLength": 2,
                  "maxLength": 2,
                  "pattern": "^[A-Z]{2}$",
                  "examples": [
                    "DE"
                  ]
                },
                "sellingPrice": {
                  "type": "string",
                  "description": "The selling price",
                  "minLength": 4,
                  "maxLength": 8
                },
                "currencyCode": {
                  "type": "string",
                  "description": "The currency code",
                  "minLength": 1,
                  "maxLength": 5
                },
                "printedCompanyIdentifier": {
                  "type": "string",
                  "description": "The printed company identifier",
                  "minLength": 1,
                  "maxLength": 2
                },
                "sellingPriceTicketPosition": {
                  "type": "integer",
                  "description": "The selling price position on the ticket",
                  "minimum": 1,
                  "maximum": 2
                },
                "licensePlateCompanyIdentifier": {
                  "type": "string",
                  "description": "The license plate company identifier",
                  "minLength": 2,
                  "maxLength": 2,
                  "pattern": "^[A-Z]{2}$",
                  "examples": [
                    "DE"
                  ]
                }
              }
            }
          },
          "colourSizes": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "colourTicketPositionNumber",
                "computerSizeNumber",
                "quantity",
                "barcode",
                "barcodeSubLine"
              ],
              "properties": {
                "colourTicketPositionNumber": {
                  "type": "string",
                  "description": "The colour ticket position number",
                  "minLength": 1,
                  "maxLength": 1
                },
                "computerSizeNumber": {
                  "type": "string",
                  "description": "The computer size number",
                  "minLength": 3,
                  "maxLength": 3
                },
                "quantity": {
                  "type": "integer",
                  "description": "The quantity of a colour size combination",
                  "minimum": 1,
                  "maximum": 999999
                },
                "pantoneName": {
                  "type": "string",
                  "description": "The pantone name of the colour",
                  "minLength": 1,
                  "maxLength": 70
                },
                "colourDescription": {
                  "type": "string",
                  "description": "The colour description",
                  "minLength": 1,
                  "maxLength": 60
                },
                "customerSizeNumber": {
                  "type": "string",
                  "description": "The customer size number of that specific small company",
                  "minLength": 1,
                  "maxLength": 7
                },
                "additionalSizeInformation": {
                  "type": "string",
                  "description": "An additional size information",
                  "minLength": 1,
                  "maxLength": 12
                },
                "gtin": {
                  "type": "string",
                  "description": "The Global Trade Item Number",
                  "minLength": 16,
                  "maxLength": 16
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URI to the product in the C and A online shop (used for the 2D barcode)",
                  "minLength": 1,
                  "maxLength": 500
                },
                "barcode": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "lineIdentifier",
                    "itemNumber",
                    "colourTicketPositionNumber",
                    "computerSizeNumber"
                  ],
                  "properties": {
                    "lineIdentifier": {
                      "type": "string",
                      "description": "The line identifier",
                      "minLength": 1,
                      "maxLength": 2
                    },
                    "itemNumber": {
                      "type": "string",
                      "description": "The item number",
                      "minLength": 7,
                      "maxLength": 7
                    },
                    "colourTicketPositionNumber": {
                      "type": "string",
                      "description": "The colour ticket position number",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "computerSizeNumber": {
                      "type": "string",
                      "description": "The computer size number",
                      "minLength": 3,
                      "maxLength": 3
                    }
                  }
                },
                "barcodeSubLine": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "lineIdentifier",
                    "itemNumber",
                    "colourTicketPositionNumber",
                    "computerSizeNumber"
                  ],
                  "properties": {
                    "lineIdentifier": {
                      "type": "string",
                      "description": "The line identifier",
                      "minLength": 1,
                      "maxLength": 2
                    },
                    "itemNumber": {
                      "type": "string",
                      "description": "The item number",
                      "minLength": 8,
                      "maxLength": 8
                    },
                    "colourTicketPositionNumber": {
                      "type": "string",
                      "description": "The colour ticket position number",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "computerSizeNumber": {
                      "type": "string",
                      "description": "The computer size number",
                      "minLength": 3,
                      "maxLength": 3
                    }
                  }
                },
                "waistbandRiderCode": {
                  "type": "integer",
                  "description": "The code for the waistband rider",
                  "minimum": 0,
                  "maximum": 99
                },
                "waistbandRiderColour": {
                  "type": "string",
                  "description": "The colour of the waistband rider",
                  "minLength": 1,
                  "maxLength": 32
                },
                "waistbandRiderText": {
                  "type": "string",
                  "description": "The text for the waistband rider",
                  "minLength": 1,
                  "maxLength": 35
                }
              }
            }
          }
        }
      }
    }
  }
}" (Start: 1860 , End: 1918, On: input.raml, Source: StringNodeImpl)
                                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                        ObjectNodeImpl (Start: -1 , End: -1)
                                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                                OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                        ObjectNodeImpl (Start: -1 , End: -1)
                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                OverlayableStringNode: "200" (Start: -1 , End: -1, Source: SYIntegerNode)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                        ObjectNodeImpl (Start: -1 , End: -1)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                OverlayableStringNode: "get" (Start: -1 , End: -1, Source: SYStringNode)
                            ResourceNode (Start: 1926 , End: 2579, On: input.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "/statusChanges" (Start: 1926 , End: 1940, On: input.raml)
                                SYObjectNode (Start: 1950 , End: 2579, On: input.raml)
                                    KeyValueNodeImpl (Start: 1950 , End: 2010, On: input.raml)
                                        SYStringNode: "description" (Start: 1950 , End: 1961, On: input.raml)
                                        OverlayableObjectNodeImpl (Start: 1963 , End: 2010, On: input.raml, Source: SYStringNode)
                                            KeyValueNodeImpl (Start: 1950 , End: 2010, On: input.raml)
                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                OverlayableStringNode: "Change the status for the given ticketRequestId" (Start: 1963 , End: 2010, On: input.raml)
                                    KeyValueNodeImpl (Start: 2019 , End: 2058, On: input.raml)
                                        SYStringNode: "is" (Start: 2019 , End: 2021, On: input.raml)
                                        SYArrayNode (Start: 2023 , End: 2058, On: input.raml)
                                            TraitRefNode client-id-required -> {TraitNode RefStart: 135 , RefEnd: 321} (Start: 2025 , End: 2056, On: input.raml, Source: SYStringNode)
                                                LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 2026 , End: 2057, On: input.raml)
                                    MethodNode (Start: 2067 , End: 2579, On: input.raml, Source: KeyValueNodeImpl)
                                        SYStringNode: "post" (Start: 2067 , End: 2071, On: input.raml)
                                        SYObjectNode (Start: 2083 , End: 2579, On: input.raml)
                                            BodyNode (Start: 2083 , End: 2299, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "body" (Start: 2083 , End: 2087, On: input.raml)
                                                SYObjectNode (Start: 2101 , End: 2299, On: input.raml)
                                                    KeyValueNodeImpl (Start: 2101 , End: 2299, On: input.raml)
                                                        SYStringNode: "application/json" (Start: 2101 , End: 2117, On: input.raml)
                                                        TypeDeclarationNode (Start: 2133 , End: 2299, On: input.raml, Source: SYObjectNode)
                                                            ExampleDeclarationNode (Start: 2133 , End: 2205, On: input.raml, Source: KeyValueNodeImpl)
                                                                SYStringNode: "example" (Start: 2133 , End: 2140, On: input.raml)
                                                                StringNodeImpl: "{
	"status": "ProductionStarted"
}" (Start: 2142 , End: 2205, On: input.raml, Source: SYIncludeNode)
                                                            KeyValueNodeImpl (Start: 2220 , End: 2288, On: input.raml)
                                                                SYStringNode: "type" (Start: 2220 , End: 2224, On: input.raml)
                                                                ExternalSchemaTypeExpressionNode: "{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"type": "object",
	"description": "Representation of an ticket request status update",
	"additionalProperties": false,
	"required": [
		"status"
	],
	"properties": {
		"status": {
			"type": "string",
			"description": "The status of the ticket request",
			"enum": [
				"Created",
				"Confirmed",
				"Cancelled",
				"ProductionStarted",
				"Completed"
			]
		}
	}
}" (Start: 2226 , End: 2288, On: input.raml, Source: StringNodeImpl)
                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                        OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                                            KeyValueNodeImpl (Start: 2299 , End: 2579, On: input.raml)
                                                SYStringNode: "responses" (Start: 2299 , End: 2308, On: input.raml)
                                                SYObjectNode (Start: 2322 , End: 2579, On: input.raml)
                                                    ResponseNode (Start: 2322 , End: 2579, On: input.raml, Source: KeyValueNodeImpl)
                                                        SYIntegerNode: 200 (Start: 2322 , End: 2325, On: input.raml)
                                                        SYObjectNode (Start: 2341 , End: 2579, On: input.raml)
                                                            BodyNode (Start: 2341 , End: 2579, On: input.raml, Source: KeyValueNodeImpl)
                                                                SYStringNode: "body" (Start: 2341 , End: 2345, On: input.raml)
                                                                SYObjectNode (Start: 2363 , End: 2579, On: input.raml)
                                                                    KeyValueNodeImpl (Start: 2363 , End: 2579, On: input.raml)
                                                                        SYStringNode: "application/json" (Start: 2363 , End: 2379, On: input.raml)
                                                                        TypeDeclarationNode (Start: 2399 , End: 2579, On: input.raml, Source: SYObjectNode)
                                                                            ExampleDeclarationNode (Start: 2399 , End: 2480, On: input.raml, Source: KeyValueNodeImpl)
                                                                                SYStringNode: "example" (Start: 2399 , End: 2406, On: input.raml)
                                                                                StringNodeImpl: "{
	"responseCode": 2000,
	"responseType": "Error",
	"responseMessage": "Status change not possible."
}" (Start: 2408 , End: 2480, On: input.raml, Source: SYIncludeNode)
                                                                            KeyValueNodeImpl (Start: 2499 , End: 2576, On: input.raml)
                                                                                SYStringNode: "type" (Start: 2499 , End: 2503, On: input.raml)
                                                                                ExternalSchemaTypeExpressionNode: "{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "Representation of the response from an ticket request status update",
	"type": "object",
	"additionalProperties": false,
	"required": [
		"responseCode",
		"responseType"
	],
	"properties": {
		"responseCode": {
			"type": "integer",
			"description": "The response code from the validation process",
			"minimum": 0,
			"maximum": 99999
		},
		"responseType": {
			"type": "string",
			"description": "The response type from the validation process ('Info' indicates that there were no issues during processing)",
			"enum": [
				"Info",
				"Warning",
				"Error"
			]
		},
		"responseMessage": {
			"type": "string",
			"description": "The detailed response message from the validation process",
			"minLenght": 1,
			"maxLenght": 500
		}
	}
}" (Start: 2505 , End: 2576, On: input.raml, Source: StringNodeImpl)
                                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                                        OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                        OverlayableStringNode: "200" (Start: -1 , End: -1, Source: SYIntegerNode)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "post" (Start: -1 , End: -1, Source: SYStringNode)
                                            KeyValueNodeImpl (Start: 255 , End: 319, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "description" (Start: 255 , End: 266, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                OverlayableObjectNodeImpl (Start: 268 , End: 319, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableObjectNodeImpl)
                                                    KeyValueNodeImpl (Start: -1 , End: 319, Source: KeyValueNodeImpl)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1, Source: StringNodeImpl)
                                                        OverlayableStringNode: "Access requires client credentials (ID and secret)." (Start: 268 , End: 319, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableStringNode)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                        ObjectNodeImpl (Start: -1 , End: -1)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                OverlayableStringNode: "/statusChanges" (Start: -1 , End: -1, Source: SYStringNode)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                ObjectNodeImpl (Start: -1 , End: -1)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "/{ticketRequestId}" (Start: -1 , End: -1, Source: SYStringNode)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                        ObjectNodeImpl (Start: -1 , End: -1)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                OverlayableStringNode: "/shipmentTicketRequests" (Start: -1 , End: -1, Source: SYStringNode)
            KeyValueNodeImpl (Start: -1 , End: -1)
                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                ObjectNodeImpl (Start: -1 , End: -1)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "value" (Start: -1 , End: -1)
                        OverlayableStringNode: "/suppliers" (Start: -1 , End: -1, Source: SYStringNode)
    ResourceNode (Start: 2579 , End: 4037, On: input.raml, Source: KeyValueNodeImpl)
        SYStringNode: "/distributionCenters" (Start: 2579 , End: 2599, On: input.raml)
        SYObjectNode (Start: 2603 , End: 4037, On: input.raml)
            KeyValueNodeImpl (Start: 2603 , End: 2674, On: input.raml)
                SYStringNode: "description" (Start: 2603 , End: 2614, On: input.raml)
                OverlayableObjectNodeImpl (Start: 2616 , End: 2674, On: input.raml, Source: SYStringNode)
                    KeyValueNodeImpl (Start: 2603 , End: 2674, On: input.raml)
                        StringNodeImpl: "value" (Start: -1 , End: -1)
                        OverlayableStringNode: "The resource provides the API for the distribution center." (Start: 2616 , End: 2674, On: input.raml)
            ResourceNode (Start: 2677 , End: 3351, On: input.raml, Source: KeyValueNodeImpl)
                SYStringNode: "/itemNumberTicketRequests" (Start: 2677 , End: 2702, On: input.raml)
                SYObjectNode (Start: 2708 , End: 3351, On: input.raml)
                    KeyValueNodeImpl (Start: 2708 , End: 2836, On: input.raml)
                        SYStringNode: "description" (Start: 2708 , End: 2719, On: input.raml)
                        OverlayableObjectNodeImpl (Start: 2721 , End: 2836, On: input.raml, Source: SYStringNode)
                            KeyValueNodeImpl (Start: 2708 , End: 2836, On: input.raml)
                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                OverlayableStringNode: "This resource provides ticket print information for a single company based on the itemnumber of the purchase order." (Start: 2721 , End: 2836, On: input.raml)
                    KeyValueNodeImpl (Start: 2841 , End: 2880, On: input.raml)
                        SYStringNode: "is" (Start: 2841 , End: 2843, On: input.raml)
                        SYArrayNode (Start: 2845 , End: 2880, On: input.raml)
                            TraitRefNode client-id-required -> {TraitNode RefStart: 135 , RefEnd: 321} (Start: 2847 , End: 2878, On: input.raml, Source: SYStringNode)
                                LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 2848 , End: 2879, On: input.raml)
                    MethodNode (Start: 2885 , End: 3351, On: input.raml, Source: KeyValueNodeImpl)
                        SYStringNode: "post" (Start: 2885 , End: 2889, On: input.raml)
                        SYObjectNode (Start: 2897 , End: 3351, On: input.raml)
                            KeyValueNodeImpl (Start: 2897 , End: 2939, On: input.raml)
                                SYStringNode: "description" (Start: 2897 , End: 2908, On: input.raml)
                                OverlayableObjectNodeImpl (Start: 2910 , End: 2939, On: input.raml, Source: SYStringNode)
                                    KeyValueNodeImpl (Start: 2897 , End: 2939, On: input.raml)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "Request data via item number." (Start: 2910 , End: 2939, On: input.raml)
                            BodyNode (Start: 2946 , End: 3128, On: input.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "body" (Start: 2946 , End: 2950, On: input.raml)
                                SYObjectNode (Start: 2960 , End: 3128, On: input.raml)
                                    KeyValueNodeImpl (Start: 2960 , End: 3128, On: input.raml)
                                        SYStringNode: "application/json" (Start: 2960 , End: 2976, On: input.raml)
                                        TypeDeclarationNode (Start: 2988 , End: 3128, On: input.raml, Source: SYObjectNode)
                                            ExampleDeclarationNode (Start: 2988 , End: 3051, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "example" (Start: 2988 , End: 2995, On: input.raml)
                                                StringNodeImpl: "{
	"itemNumber": 4657666,
	"masterCompanyIsoCode": "NL",
	"creationTimestamp": "2018-12-31T23:59:59.999Z"
}" (Start: 2997 , End: 3051, On: input.raml, Source: SYIncludeNode)
                                            KeyValueNodeImpl (Start: 3062 , End: 3121, On: input.raml)
                                                SYStringNode: "type" (Start: 3062 , End: 3066, On: input.raml)
                                                ExternalSchemaTypeExpressionNode: "{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "Representation of a ticket request for a single company based on the itemnumber of the purchase order.",
	"type": "object",
	"additionalProperties": false,
	"required": [
		"itemNumber",
		"masterCompanyIsoCode"
	],
	"properties": {
		"itemNumber": {
			"type": "integer",
			"description": "The item number",
			"minimum": 19,
			"maximum": 9999999
		},
		"masterCompanyIsoCode": {
			"type": "string",
			"description": "The country iso code",
			"minLength": 2,
			"maxLength": 2,
			"pattern": "^[A-Z]{2}$",
			"examples": [
				"DE"
			]
		},
		"creationTimestamp": {
			"description": "User defined timestamp at which the request was created by the ticket provider",
			"type": "string",
			"format": "datetime"
		}
	}
}" (Start: 3068 , End: 3121, On: input.raml, Source: StringNodeImpl)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                            KeyValueNodeImpl (Start: 3128 , End: 3351, On: input.raml)
                                SYStringNode: "responses" (Start: 3128 , End: 3137, On: input.raml)
                                SYObjectNode (Start: 3147 , End: 3351, On: input.raml)
                                    ResponseNode (Start: 3147 , End: 3351, On: input.raml, Source: KeyValueNodeImpl)
                                        SYIntegerNode: 200 (Start: 3147 , End: 3150, On: input.raml)
                                        SYObjectNode (Start: 3162 , End: 3351, On: input.raml)
                                            BodyNode (Start: 3162 , End: 3351, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "body" (Start: 3162 , End: 3166, On: input.raml)
                                                SYObjectNode (Start: 3180 , End: 3351, On: input.raml)
                                                    KeyValueNodeImpl (Start: 3180 , End: 3351, On: input.raml)
                                                        SYStringNode: "application/json" (Start: 3180 , End: 3196, On: input.raml)
                                                        TypeDeclarationNode (Start: 3212 , End: 3351, On: input.raml, Source: SYObjectNode)
                                                            ExampleDeclarationNode (Start: 3212 , End: 3274, On: input.raml, Source: KeyValueNodeImpl)
                                                                SYStringNode: "example" (Start: 3212 , End: 3219, On: input.raml)
                                                                StringNodeImpl: "{
  "ticketRequestId": "567a5eae74d543bcadbfeb165c37a0e6",
  "responseCode": 0,
  "responseType": "Info",
  "responseMessage": "No error occured during validation",
  "ticketType": 105,
  "oekotexFlag": true,
  "nosSeasonIndicator": "SNOS",
  "orderNumber": "705/32/77580/656",
  "purchaseOrderNumber": 80792995,
  "masterCompanies": [
    {
      "companyIsoCode": "AT",
      "itemNumber": "0123.456",
      "ticketInfoText": "CB:07_THEM _PR_TA02",
      "nationalStyleIdPrefix": "S820",
      "customerSizeRange": "XS - XXL",
      "sellingPrices": [
        {
          "companyIsoCode": "AT",
          "sellingPrice": "8.00",
          "crossedPrice": "9.00",
          "currencyCode": "EURO",
          "sellingPriceTicketPosition": 1,
          "printedCompanyIdentifier": "A",
          "licensePlateCompanyIdentifier": "AT"
        },
        {
          "companyIsoCode": "RO",
          "sellingPrice": "34.90",
          "crossedPrice": "38.00",
          "currencyCode": "RON",
          "sellingPriceTicketPosition": 2,
          "printedCompanyIdentifier": "RO",
          "licensePlateCompanyIdentifier": "RO"
        },
        {
          "companyIsoCode": "HR",
          "sellingPrice": "59,00",
          "crossedPrice": "65.00",
          "currencyCode": "HRK",
          "printedCompanyIdentifier": "HR",
          "licensePlateCompanyIdentifier": "HR"
        },
        {
          "companyIsoCode": "SI",
          "sellingPrice": "7.50",
          "crossedPrice": "8.00",
          "currencyCode": "EURO",
          "printedCompanyIdentifier": "SI",
          "licensePlateCompanyIdentifier": "SI"
        },
        {
          "companyIsoCode": "RS",
          "sellingPrice": "950.00",
          "crossedPrice": "1000.00",
          "currencyCode": "RSD",
          "printedCompanyIdentifier": "RS",
          "licensePlateCompanyIdentifier": "RS"
        }
      ],
      "colourSizes": [
        {
          "colourTicketPositionNumber": "1",
          "computerSizeNumber": "056",
          "quantity": 150,
          "pantoneName": "16-5803",
          "colourDescription": "Flint Gray",
          "customerSizeNumber": "M",
          "additionalSizeInformation": "0-1 MON",
          "gtin": "04 061507 789603",
          "url": "https://qr.c-a.com/?01=04061507789603",
          "barcode": {
            "itemNumber": "0123456",
            "colourTicketPositionNumber": "1",
            "computerSizeNumber": "056"
          },
          "barcodeSubLine": {
            "itemNumber": "0123.456",
            "colourTicketPositionNumber": "1",
            "computerSizeNumber": "056"
          },
          "waistbandRiderCode": 13,
          "waistbandRiderColour": "yellow",
          "waistbandRiderText": "WEITE PASSWORM"
        }
      ],
      "packs": [
        {
          "packName": "A",
          "numberOfPacks": 3,
          "colourSizes": [
            {
              "colourTicketPositionNumber": "1",
              "computerSizeNumber": "056",
              "quantity": 50,
              "pantoneName": "16-5803",
              "colourDescription": "Flint Gray",
              "customerSizeNumber": "M",
              "additionalSizeInformation": "0-1 MON",
              "gtin": "04 061507 789603",
              "url": "https://qr.c-a.com/?01=04061507789603",
              "barcode": {
                "itemNumber": "0123456",
                "colourTicketPositionNumber": "1",
                "computerSizeNumber": "056"
              },
              "barcodeSubLine": {
                "itemNumber": "0123.456",
                "colourTicketPositionNumber": "1",
                "computerSizeNumber": "056"
              },
              "waistbandRiderCode": 13,
              "waistbandRiderColour": "yellow",
              "waistbandRiderText": "WEITE PASSWORM"
            }
          ]
        }
      ]
    }
  ]
}" (Start: 3221 , End: 3274, On: input.raml, Source: SYIncludeNode)
                                                            KeyValueNodeImpl (Start: 3289 , End: 3347, On: input.raml)
                                                                SYStringNode: "type" (Start: 3289 , End: 3293, On: input.raml)
                                                                ExternalSchemaTypeExpressionNode: "{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Representation of the ticket print information (with 'preformatted' values)",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "ticketRequestId",
    "responseCode",
    "responseType"
  ],
  "properties": {
    "ticketRequestId": {
      "type": "string",
      "description": "The ticket request id. (generated during the creation of ticket print information)",
      "minimum": 32,
      "maximum": 32
    },
    "responseCode": {
      "type": "integer",
      "description": "The response code from the validation process",
      "minimum": 0,
      "maximum": 99999
    },
    "responseType": {
      "type": "string",
      "description": "The response type from the validation process ('Info' indicates that there were no issues during processing)",
      "enum": [
        "Info",
        "Warning",
        "Error"
      ]
    },
    "responseMessage": {
      "type": "string",
      "description": "The detailed response message from the validation process",
      "minLength": 1,
      "maxLength": 500
    },
    "ticketType": {
      "type": "integer",
      "description": "The ticket type being produced",
      "minimum": 0,
      "maximum": 9999
    },
    "oekotexFlag": {
      "type": "boolean",
      "description": "Indicates whether it deals about oeko merchandise or not"
    },
    "nosSeasonIndicator": {
      "type": "string",
      "description": "The nos season indicator",
      "minLength": 1,
      "maxLength": 4
    },
    "orderNumber": {
      "type": "string",
      "description": "The order number",
      "minLength": 16,
      "maxLength": 16
    },
    "purchaseOrderNumber": {
      "type": "integer",
      "description": "The purchase order number corresponding to the parameters of the ticket request",
      "minimum": 1,
      "maximum": 9999999999
    },
    "masterCompanies": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyIsoCode",
          "itemNumber",
          "sellingPrices",
          "colourSizes",
          "packs"
        ],
        "properties": {
          "companyIsoCode": {
            "type": "string",
            "description": "The country iso code acts as the identifier of a master company",
            "minLength": 2,
            "maxLength": 2,
            "pattern": "^[A-Z]{2}$",
            "examples": [
              "DE"
            ]
          },
          "ticketInfoText": {
            "type": "string",
            "description": "Information that might be printed on the ticket",
            "minLength": 1,
            "maxLength": 20
          },
          "customerSizeRange": {
            "type": "string",
            "description": "The customer size range",
            "minLength": 1,
            "maxLength": 15
          },
          "itemNumber": {
            "type": "string",
            "description": "The item number with leading zeroes",
            "minLength": 8,
            "maxLength": 8
          },
          "nationalStyleIdPrefix": {
            "type": "string",
            "description": "The national style identifier prefix",
            "minLength": 1,
            "maxLength": 4
          },
          "sellingPrices": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "companyIsoCode",
                "sellingPrice",
                "currencyCode",
                "printedCompanyIdentifier"
              ],
              "properties": {
                "companyIsoCode": {
                  "type": "string",
                  "description": "The country iso code of the respective country",
                  "minLength": 2,
                  "maxLength": 2,
                  "pattern": "^[A-Z]{2}$",
                  "examples": [
                    "DE"
                  ]
                },
                "sellingPrice": {
                  "type": "string",
                  "description": "The selling price",
                  "minLength": 4,
                  "maxLength": 8
                },
                "crossedPrice": {
                  "type": "string",
                  "description": "The crossed price",
                  "minLength": 4,
                  "maxLength": 8
                },
                "currencyCode": {
                  "type": "string",
                  "description": "The currency code",
                  "minLength": 1,
                  "maxLength": 5
                },
                "printedCompanyIdentifier": {
                  "type": "string",
                  "description": "The printed company identifier",
                  "minLength": 1,
                  "maxLength": 2
                },
                "sellingPriceTicketPosition": {
                  "type": "integer",
                  "description": "The selling price position on the ticket",
                  "minimum": 1,
                  "maximum": 2
                },
                "licensePlateCompanyIdentifier": {
                  "type": "string",
                  "description": "The license plate company identifier",
                  "minLength": 2,
                  "maxLength": 2,
                  "pattern": "^[A-Z]{2}$",
                  "examples": [
                    "DE"
                  ]
                }
              }
            }
          },
          "colourSizes": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "colourTicketPositionNumber",
                "computerSizeNumber",
                "quantity",
                "barcode",
                "barcodeSubLine"
              ],
              "properties": {
                "colourTicketPositionNumber": {
                  "type": "string",
                  "description": "The colour ticket position number",
                  "minLength": 1,
                  "maxLength": 1
                },
                "computerSizeNumber": {
                  "type": "string",
                  "description": "The computer size number",
                  "minLength": 3,
                  "maxLength": 3
                },
                "quantity": {
                  "type": "integer",
                  "description": "The quantity of a colour size combination",
                  "minimum": 1,
                  "maximum": 999999
                },
                "pantoneName": {
                  "type": "string",
                  "description": "The pantone name of the colour",
                  "minLength": 1,
                  "maxLength": 70
                },
                "colourDescription": {
                  "type": "string",
                  "description": "The colour description",
                  "minLength": 1,
                  "maxLength": 60
                },
                "customerSizeNumber": {
                  "type": "string",
                  "description": "The customer size number of that specific small company",
                  "minLength": 1,
                  "maxLength": 7
                },
                "additionalSizeInformation": {
                  "type": "string",
                  "description": "An additional size information",
                  "minLength": 1,
                  "maxLength": 12
                },
                "gtin": {
                  "type": "string",
                  "description": "The Global Trade Item Number",
                  "minLength": 16,
                  "maxLength": 16
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URI to the product in the C and A online shop (used for the 2D barcode)",
                  "minLength": 1,
                  "maxLength": 500
                },
                "barcode": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "itemNumber",
                    "colourTicketPositionNumber",
                    "computerSizeNumber"
                  ],
                  "properties": {
                    "itemNumber": {
                      "type": "string",
                      "description": "The item number",
                      "minLength": 7,
                      "maxLength": 7
                    },
                    "colourTicketPositionNumber": {
                      "type": "string",
                      "description": "The colour ticket position number",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "computerSizeNumber": {
                      "type": "string",
                      "description": "The computer size number",
                      "minLength": 3,
                      "maxLength": 3
                    }
                  }
                },
                "barcodeSubLine": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "itemNumber",
                    "colourTicketPositionNumber",
                    "computerSizeNumber"
                  ],
                  "properties": {
                    "itemNumber": {
                      "type": "string",
                      "description": "The item number",
                      "minLength": 8,
                      "maxLength": 8
                    },
                    "colourTicketPositionNumber": {
                      "type": "string",
                      "description": "The colour ticket position number",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "computerSizeNumber": {
                      "type": "string",
                      "description": "The computer size number",
                      "minLength": 3,
                      "maxLength": 3
                    }
                  }
                },
                "waistbandRiderCode": {
                  "type": "integer",
                  "description": "The code for the waistband rider",
                  "minimum": 0,
                  "maximum": 99
                },
                "waistbandRiderColour": {
                  "type": "string",
                  "description": "The colour of the waistband rider",
                  "minLength": 1,
                  "maxLength": 32
                },
                "waistbandRiderText": {
                  "type": "string",
                  "description": "The text for the waistband rider",
                  "minLength": 1,
                  "maxLength": 35
                }
              }
            }
          },
          "packs": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "packName",
                "numberOfPacks",
                "colourSizes"
              ],
              "properties": {
                "packName": {
                  "type": "string",
                  "description": "The name of the pack is the identifier",
                  "minLength": 1,
                  "maxLength": 8
                },
                "numberOfPacks": {
                  "type": "integer",
                  "description": "The quantity of packs for the specific master company",
                  "minimum": 1,
                  "maximum": 9999
                },
                "colourSizes": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "colourTicketPositionNumber",
                      "computerSizeNumber",
                      "quantity",
                      "barcode",
                      "barcodeSubLine"
                    ],
                    "properties": {
                      "colourTicketPositionNumber": {
                        "type": "string",
                        "description": "The colour ticket position number",
                        "minLength": 1,
                        "maxLength": 1
                      },
                      "computerSizeNumber": {
                        "type": "string",
                        "description": "The computer size number",
                        "minLength": 3,
                        "maxLength": 3
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The quantity of a pack colour size combination",
                        "minimum": 1,
                        "maximum": 999999
                      },
                      "pantoneName": {
                        "type": "string",
                        "description": "The pantone name of the colour",
                        "minLength": 1,
                        "maxLength": 70
                      },
                      "colourDescription": {
                        "type": "string",
                        "description": "The colour description",
                        "minLength": 1,
                        "maxLength": 60
                      },
                      "customerSizeNumber": {
                        "type": "string",
                        "description": "The customer size number of that specific small company",
                        "minLength": 1,
                        "maxLength": 7
                      },
                      "additionalSizeInformation": {
                        "type": "string",
                        "description": "An additional size information",
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "gtin": {
                        "type": "string",
                        "description": "The global trade item number",
                        "minLength": 16,
                        "maxLength": 16
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI to the product in the C and A online shop (used for the 2D barcode)",
                        "minLength": 1,
                        "maxLength": 500
                      },
                      "barcode": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "itemNumber",
                          "colourTicketPositionNumber",
                          "computerSizeNumber"
                        ],
                        "properties": {
                          "itemNumber": {
                            "type": "string",
                            "description": "The item number",
                            "minLength": 7,
                            "maxLength": 7
                          },
                          "colourTicketPositionNumber": {
                            "type": "string",
                            "description": "The colour ticket position number",
                            "minLength": 1,
                            "maxLength": 1
                          },
                          "computerSizeNumber": {
                            "type": "string",
                            "description": "The computer size number",
                            "minLength": 3,
                            "maxLength": 3
                          }
                        }
                      },
                      "barcodeSubLine": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "itemNumber",
                          "colourTicketPositionNumber",
                          "computerSizeNumber"
                        ],
                        "properties": {
                          "itemNumber": {
                            "type": "string",
                            "description": "The item number",
                            "minLength": 8,
                            "maxLength": 8
                          },
                          "colourTicketPositionNumber": {
                            "type": "string",
                            "description": "The colour ticket position number",
                            "minLength": 1,
                            "maxLength": 1
                          },
                          "computerSizeNumber": {
                            "type": "string",
                            "description": "The computer size number",
                            "minLength": 3,
                            "maxLength": 3
                          }
                        }
                      },
                      "waistbandRiderCode": {
                        "type": "integer",
                        "description": "The code for the waistband rider",
                        "minimum": 0,
                        "maximum": 99
                      },
                      "waistbandRiderColour": {
                        "type": "string",
                        "description": "The colour of the waistband rider",
                        "minLength": 1,
                        "maxLength": 32
                      },
                      "waistbandRiderText": {
                        "type": "string",
                        "description": "The text for the waistband rider",
                        "minLength": 1,
                        "maxLength": 35
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}" (Start: 3295 , End: 3347, On: input.raml, Source: StringNodeImpl)
                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                        OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "200" (Start: -1 , End: -1, Source: SYIntegerNode)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                ObjectNodeImpl (Start: -1 , End: -1)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "post" (Start: -1 , End: -1, Source: SYStringNode)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                        ObjectNodeImpl (Start: -1 , End: -1)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                OverlayableStringNode: "/itemNumberTicketRequests" (Start: -1 , End: -1, Source: SYStringNode)
            ResourceNode (Start: 3351 , End: 4037, On: input.raml, Source: KeyValueNodeImpl)
                SYStringNode: "/shipmentTicketRequests" (Start: 3351 , End: 3374, On: input.raml)
                SYObjectNode (Start: 3380 , End: 4037, On: input.raml)
                    KeyValueNodeImpl (Start: 3380 , End: 3519, On: input.raml)
                        SYStringNode: "description" (Start: 3380 , End: 3391, On: input.raml)
                        OverlayableObjectNodeImpl (Start: 3393 , End: 3519, On: input.raml, Source: SYStringNode)
                            KeyValueNodeImpl (Start: 3380 , End: 3519, On: input.raml)
                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                OverlayableStringNode: "This resource provides ticket print information for multiple companies based on the shipment attributes of the purchase order." (Start: 3393 , End: 3519, On: input.raml)
                    KeyValueNodeImpl (Start: 3524 , End: 3563, On: input.raml)
                        SYStringNode: "is" (Start: 3524 , End: 3526, On: input.raml)
                        SYArrayNode (Start: 3528 , End: 3563, On: input.raml)
                            TraitRefNode client-id-required -> {TraitNode RefStart: 135 , RefEnd: 321} (Start: 3530 , End: 3561, On: input.raml, Source: SYStringNode)
                                LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 3531 , End: 3562, On: input.raml)
                    MethodNode (Start: 3568 , End: 4037, On: input.raml, Source: KeyValueNodeImpl)
                        SYStringNode: "post" (Start: 3568 , End: 3572, On: input.raml)
                        SYObjectNode (Start: 3580 , End: 4037, On: input.raml)
                            KeyValueNodeImpl (Start: 3580 , End: 3630, On: input.raml)
                                SYStringNode: "description" (Start: 3580 , End: 3591, On: input.raml)
                                OverlayableObjectNodeImpl (Start: 3593 , End: 3630, On: input.raml, Source: SYStringNode)
                                    KeyValueNodeImpl (Start: 3580 , End: 3630, On: input.raml)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "Request data via shipment attributes." (Start: 3593 , End: 3630, On: input.raml)
                            BodyNode (Start: 3637 , End: 3815, On: input.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "body" (Start: 3637 , End: 3641, On: input.raml)
                                SYObjectNode (Start: 3651 , End: 3815, On: input.raml)
                                    KeyValueNodeImpl (Start: 3651 , End: 3815, On: input.raml)
                                        SYStringNode: "application/json" (Start: 3651 , End: 3667, On: input.raml)
                                        TypeDeclarationNode (Start: 3679 , End: 3815, On: input.raml, Source: SYObjectNode)
                                            ExampleDeclarationNode (Start: 3679 , End: 3740, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "example" (Start: 3679 , End: 3686, On: input.raml)
                                                StringNodeImpl: "{
	"supplierNumber": 99999,
	"classificationNumber": 999,
	"codeNumber": 99,
	"serialNumber": 999,
	"shipmentNumber": 999,
	"masterCompanyIsoCode": "DE",
	"creationTimestamp": "2018-12-31T23:59:59.999Z"
}" (Start: 3688 , End: 3740, On: input.raml, Source: SYIncludeNode)
                                            KeyValueNodeImpl (Start: 3751 , End: 3808, On: input.raml)
                                                SYStringNode: "type" (Start: 3751 , End: 3755, On: input.raml)
                                                ExternalSchemaTypeExpressionNode: "{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "Representation of a ticket request for multiple companies based on the shipment attributes of the purchase order.",
	"type": "object",
	"additionalProperties": false,
	"required": [
		"supplierNumber",
		"classificationNumber",
		"codeNumber",
		"serialNumber",
		"shipmentNumber",
		"masterCompanyIsoCode"
	],
	"properties": {
		"supplierNumber": {
			"type": "integer",
			"description": "The merchandise supplier number",
			"minimum": 0,
			"maximum": 99999
		},
		"classificationNumber": {
			"type": "integer",
			"description": "The classification number",
			"minimum": 0,
			"maximum": 999
		},
		"codeNumber": {
			"type": "integer",
			"description": "The code number",
			"minimum": 0,
			"maximum": 99
		},
		"serialNumber": {
			"type": "integer",
			"description": "The serial number",
			"minimum": 0,
			"maximum": 999
		},
		"shipmentNumber": {
			"type": "integer",
			"description": "The shipment number",
			"minimum": 0,
			"maximum": 999
		},
		"masterCompanyIsoCode": {
			"type": "string",
			"description": "The country iso code",
			"minLength": 2,
			"maxLength": 2,
			"pattern": "^[A-Z]{2}$",
			"examples": [
				"DE"
			]
		},
		"creationTimestamp": {
			"description": "User defined timestamp at which the request was created by the ticket provider",
			"type": "string",
			"format": "datetime"
		}
	}
}" (Start: 3757 , End: 3808, On: input.raml, Source: StringNodeImpl)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                            KeyValueNodeImpl (Start: 3815 , End: 4037, On: input.raml)
                                SYStringNode: "responses" (Start: 3815 , End: 3824, On: input.raml)
                                SYObjectNode (Start: 3834 , End: 4037, On: input.raml)
                                    ResponseNode (Start: 3834 , End: 4037, On: input.raml, Source: KeyValueNodeImpl)
                                        SYIntegerNode: 200 (Start: 3834 , End: 3837, On: input.raml)
                                        SYObjectNode (Start: 3849 , End: 4037, On: input.raml)
                                            BodyNode (Start: 3849 , End: 4037, On: input.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "body" (Start: 3849 , End: 3853, On: input.raml)
                                                SYObjectNode (Start: 3867 , End: 4037, On: input.raml)
                                                    KeyValueNodeImpl (Start: 3867 , End: 4037, On: input.raml)
                                                        SYStringNode: "application/json" (Start: 3867 , End: 3883, On: input.raml)
                                                        TypeDeclarationNode (Start: 3899 , End: 4037, On: input.raml, Source: SYObjectNode)
                                                            ExampleDeclarationNode (Start: 3899 , End: 3961, On: input.raml, Source: KeyValueNodeImpl)
                                                                SYStringNode: "example" (Start: 3899 , End: 3906, On: input.raml)
                                                                StringNodeImpl: "{
  "ticketRequestId": "567a5eae74d543bcadbfeb165c37a0e6",
  "responseCode": 0,
  "responseType": "Info",
  "responseMessage": "No error occured during validation",
  "ticketType": 105,
  "oekotexFlag": true,
  "nosSeasonIndicator": "SNOS",
  "orderNumber": "705/32/77580/656",
  "purchaseOrderNumber": 80792995,
  "masterCompanies": [
    {
      "companyIsoCode": "AT",
      "itemNumber": "0123.456",
      "ticketInfoText": "CB:07_THEM _PR_TA02",
      "nationalStyleIdPrefix": "S820",
      "customerSizeRange": "XS - XXL",
      "sellingPrices": [
        {
          "companyIsoCode": "AT",
          "sellingPrice": "8.00",
          "crossedPrice": "9.00",
          "currencyCode": "EURO",
          "sellingPriceTicketPosition": 1,
          "printedCompanyIdentifier": "A",
          "licensePlateCompanyIdentifier": "AT"
        },
        {
          "companyIsoCode": "RO",
          "sellingPrice": "34.90",
          "crossedPrice": "38.00",
          "currencyCode": "RON",
          "sellingPriceTicketPosition": 2,
          "printedCompanyIdentifier": "RO",
          "licensePlateCompanyIdentifier": "RO"
        },
        {
          "companyIsoCode": "HR",
          "sellingPrice": "59,00",
          "crossedPrice": "65.00",
          "currencyCode": "HRK",
          "printedCompanyIdentifier": "HR",
          "licensePlateCompanyIdentifier": "HR"
        },
        {
          "companyIsoCode": "SI",
          "sellingPrice": "7.50",
          "crossedPrice": "8.00",
          "currencyCode": "EURO",
          "printedCompanyIdentifier": "SI",
          "licensePlateCompanyIdentifier": "SI"
        },
        {
          "companyIsoCode": "RS",
          "sellingPrice": "950.00",
          "crossedPrice": "1000.00",
          "currencyCode": "RSD",
          "printedCompanyIdentifier": "RS",
          "licensePlateCompanyIdentifier": "RS"
        }
      ],
      "colourSizes": [
        {
          "colourTicketPositionNumber": "1",
          "computerSizeNumber": "056",
          "quantity": 150,
          "pantoneName": "16-5803",
          "colourDescription": "Flint Gray",
          "customerSizeNumber": "M",
          "additionalSizeInformation": "0-1 MON",
          "gtin": "04 061507 789603",
          "url": "https://qr.c-a.com/?01=04061507789603",
          "barcode": {
            "itemNumber": "0123456",
            "colourTicketPositionNumber": "1",
            "computerSizeNumber": "056"
          },
          "barcodeSubLine": {
            "itemNumber": "0123.456",
            "colourTicketPositionNumber": "1",
            "computerSizeNumber": "056"
          },
          "waistbandRiderCode": 13,
          "waistbandRiderColour": "yellow",
          "waistbandRiderText": "WEITE PASSWORM"
        }
      ],
      "packs": [
        {
          "packName": "A",
          "numberOfPacks": 3,
          "colourSizes": [
            {
              "colourTicketPositionNumber": "1",
              "computerSizeNumber": "056",
              "quantity": 50,
              "pantoneName": "16-5803",
              "colourDescription": "Flint Gray",
              "customerSizeNumber": "M",
              "additionalSizeInformation": "0-1 MON",
              "gtin": "04 061507 789603",
              "url": "https://qr.c-a.com/?01=04061507789603",
              "barcode": {
                "itemNumber": "0123456",
                "colourTicketPositionNumber": "1",
                "computerSizeNumber": "056"
              },
              "barcodeSubLine": {
                "itemNumber": "0123.456",
                "colourTicketPositionNumber": "1",
                "computerSizeNumber": "056"
              },
              "waistbandRiderCode": 13,
              "waistbandRiderColour": "yellow",
              "waistbandRiderText": "WEITE PASSWORM"
            }
          ]
        }
      ]
    }
  ]
}" (Start: 3908 , End: 3961, On: input.raml, Source: SYIncludeNode)
                                                            KeyValueNodeImpl (Start: 3976 , End: 4034, On: input.raml)
                                                                SYStringNode: "type" (Start: 3976 , End: 3980, On: input.raml)
                                                                ExternalSchemaTypeExpressionNode: "{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Representation of the ticket print information (with 'preformatted' values)",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "ticketRequestId",
    "responseCode",
    "responseType"
  ],
  "properties": {
    "ticketRequestId": {
      "type": "string",
      "description": "The ticket request id. (generated during the creation of ticket print information)",
      "minimum": 32,
      "maximum": 32
    },
    "responseCode": {
      "type": "integer",
      "description": "The response code from the validation process",
      "minimum": 0,
      "maximum": 99999
    },
    "responseType": {
      "type": "string",
      "description": "The response type from the validation process ('Info' indicates that there were no issues during processing)",
      "enum": [
        "Info",
        "Warning",
        "Error"
      ]
    },
    "responseMessage": {
      "type": "string",
      "description": "The detailed response message from the validation process",
      "minLength": 1,
      "maxLength": 500
    },
    "ticketType": {
      "type": "integer",
      "description": "The ticket type being produced",
      "minimum": 0,
      "maximum": 9999
    },
    "oekotexFlag": {
      "type": "boolean",
      "description": "Indicates whether it deals about oeko merchandise or not"
    },
    "nosSeasonIndicator": {
      "type": "string",
      "description": "The nos season indicator",
      "minLength": 1,
      "maxLength": 4
    },
    "orderNumber": {
      "type": "string",
      "description": "The order number",
      "minLength": 16,
      "maxLength": 16
    },
    "purchaseOrderNumber": {
      "type": "integer",
      "description": "The purchase order number corresponding to the parameters of the ticket request",
      "minimum": 1,
      "maximum": 9999999999
    },
    "masterCompanies": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "companyIsoCode",
          "itemNumber",
          "sellingPrices",
          "colourSizes",
          "packs"
        ],
        "properties": {
          "companyIsoCode": {
            "type": "string",
            "description": "The country iso code acts as the identifier of a master company",
            "minLength": 2,
            "maxLength": 2,
            "pattern": "^[A-Z]{2}$",
            "examples": [
              "DE"
            ]
          },
          "ticketInfoText": {
            "type": "string",
            "description": "Information that might be printed on the ticket",
            "minLength": 1,
            "maxLength": 20
          },
          "customerSizeRange": {
            "type": "string",
            "description": "The customer size range",
            "minLength": 1,
            "maxLength": 15
          },
          "itemNumber": {
            "type": "string",
            "description": "The item number with leading zeroes",
            "minLength": 8,
            "maxLength": 8
          },
          "nationalStyleIdPrefix": {
            "type": "string",
            "description": "The national style identifier prefix",
            "minLength": 1,
            "maxLength": 4
          },
          "sellingPrices": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "companyIsoCode",
                "sellingPrice",
                "currencyCode",
                "printedCompanyIdentifier"
              ],
              "properties": {
                "companyIsoCode": {
                  "type": "string",
                  "description": "The country iso code of the respective country",
                  "minLength": 2,
                  "maxLength": 2,
                  "pattern": "^[A-Z]{2}$",
                  "examples": [
                    "DE"
                  ]
                },
                "sellingPrice": {
                  "type": "string",
                  "description": "The selling price",
                  "minLength": 4,
                  "maxLength": 8
                },
                "crossedPrice": {
                  "type": "string",
                  "description": "The crossed price",
                  "minLength": 4,
                  "maxLength": 8
                },
                "currencyCode": {
                  "type": "string",
                  "description": "The currency code",
                  "minLength": 1,
                  "maxLength": 5
                },
                "printedCompanyIdentifier": {
                  "type": "string",
                  "description": "The printed company identifier",
                  "minLength": 1,
                  "maxLength": 2
                },
                "sellingPriceTicketPosition": {
                  "type": "integer",
                  "description": "The selling price position on the ticket",
                  "minimum": 1,
                  "maximum": 2
                },
                "licensePlateCompanyIdentifier": {
                  "type": "string",
                  "description": "The license plate company identifier",
                  "minLength": 2,
                  "maxLength": 2,
                  "pattern": "^[A-Z]{2}$",
                  "examples": [
                    "DE"
                  ]
                }
              }
            }
          },
          "colourSizes": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "colourTicketPositionNumber",
                "computerSizeNumber",
                "quantity",
                "barcode",
                "barcodeSubLine"
              ],
              "properties": {
                "colourTicketPositionNumber": {
                  "type": "string",
                  "description": "The colour ticket position number",
                  "minLength": 1,
                  "maxLength": 1
                },
                "computerSizeNumber": {
                  "type": "string",
                  "description": "The computer size number",
                  "minLength": 3,
                  "maxLength": 3
                },
                "quantity": {
                  "type": "integer",
                  "description": "The quantity of a colour size combination",
                  "minimum": 1,
                  "maximum": 999999
                },
                "pantoneName": {
                  "type": "string",
                  "description": "The pantone name of the colour",
                  "minLength": 1,
                  "maxLength": 70
                },
                "colourDescription": {
                  "type": "string",
                  "description": "The colour description",
                  "minLength": 1,
                  "maxLength": 60
                },
                "customerSizeNumber": {
                  "type": "string",
                  "description": "The customer size number of that specific small company",
                  "minLength": 1,
                  "maxLength": 7
                },
                "additionalSizeInformation": {
                  "type": "string",
                  "description": "An additional size information",
                  "minLength": 1,
                  "maxLength": 12
                },
                "gtin": {
                  "type": "string",
                  "description": "The Global Trade Item Number",
                  "minLength": 16,
                  "maxLength": 16
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URI to the product in the C and A online shop (used for the 2D barcode)",
                  "minLength": 1,
                  "maxLength": 500
                },
                "barcode": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "itemNumber",
                    "colourTicketPositionNumber",
                    "computerSizeNumber"
                  ],
                  "properties": {
                    "itemNumber": {
                      "type": "string",
                      "description": "The item number",
                      "minLength": 7,
                      "maxLength": 7
                    },
                    "colourTicketPositionNumber": {
                      "type": "string",
                      "description": "The colour ticket position number",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "computerSizeNumber": {
                      "type": "string",
                      "description": "The computer size number",
                      "minLength": 3,
                      "maxLength": 3
                    }
                  }
                },
                "barcodeSubLine": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "itemNumber",
                    "colourTicketPositionNumber",
                    "computerSizeNumber"
                  ],
                  "properties": {
                    "itemNumber": {
                      "type": "string",
                      "description": "The item number",
                      "minLength": 8,
                      "maxLength": 8
                    },
                    "colourTicketPositionNumber": {
                      "type": "string",
                      "description": "The colour ticket position number",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "computerSizeNumber": {
                      "type": "string",
                      "description": "The computer size number",
                      "minLength": 3,
                      "maxLength": 3
                    }
                  }
                },
                "waistbandRiderCode": {
                  "type": "integer",
                  "description": "The code for the waistband rider",
                  "minimum": 0,
                  "maximum": 99
                },
                "waistbandRiderColour": {
                  "type": "string",
                  "description": "The colour of the waistband rider",
                  "minLength": 1,
                  "maxLength": 32
                },
                "waistbandRiderText": {
                  "type": "string",
                  "description": "The text for the waistband rider",
                  "minLength": 1,
                  "maxLength": 35
                }
              }
            }
          },
          "packs": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "packName",
                "numberOfPacks",
                "colourSizes"
              ],
              "properties": {
                "packName": {
                  "type": "string",
                  "description": "The name of the pack is the identifier",
                  "minLength": 1,
                  "maxLength": 8
                },
                "numberOfPacks": {
                  "type": "integer",
                  "description": "The quantity of packs for the specific master company",
                  "minimum": 1,
                  "maximum": 9999
                },
                "colourSizes": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "colourTicketPositionNumber",
                      "computerSizeNumber",
                      "quantity",
                      "barcode",
                      "barcodeSubLine"
                    ],
                    "properties": {
                      "colourTicketPositionNumber": {
                        "type": "string",
                        "description": "The colour ticket position number",
                        "minLength": 1,
                        "maxLength": 1
                      },
                      "computerSizeNumber": {
                        "type": "string",
                        "description": "The computer size number",
                        "minLength": 3,
                        "maxLength": 3
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The quantity of a pack colour size combination",
                        "minimum": 1,
                        "maximum": 999999
                      },
                      "pantoneName": {
                        "type": "string",
                        "description": "The pantone name of the colour",
                        "minLength": 1,
                        "maxLength": 70
                      },
                      "colourDescription": {
                        "type": "string",
                        "description": "The colour description",
                        "minLength": 1,
                        "maxLength": 60
                      },
                      "customerSizeNumber": {
                        "type": "string",
                        "description": "The customer size number of that specific small company",
                        "minLength": 1,
                        "maxLength": 7
                      },
                      "additionalSizeInformation": {
                        "type": "string",
                        "description": "An additional size information",
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "gtin": {
                        "type": "string",
                        "description": "The global trade item number",
                        "minLength": 16,
                        "maxLength": 16
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "The URI to the product in the C and A online shop (used for the 2D barcode)",
                        "minLength": 1,
                        "maxLength": 500
                      },
                      "barcode": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "itemNumber",
                          "colourTicketPositionNumber",
                          "computerSizeNumber"
                        ],
                        "properties": {
                          "itemNumber": {
                            "type": "string",
                            "description": "The item number",
                            "minLength": 7,
                            "maxLength": 7
                          },
                          "colourTicketPositionNumber": {
                            "type": "string",
                            "description": "The colour ticket position number",
                            "minLength": 1,
                            "maxLength": 1
                          },
                          "computerSizeNumber": {
                            "type": "string",
                            "description": "The computer size number",
                            "minLength": 3,
                            "maxLength": 3
                          }
                        }
                      },
                      "barcodeSubLine": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "itemNumber",
                          "colourTicketPositionNumber",
                          "computerSizeNumber"
                        ],
                        "properties": {
                          "itemNumber": {
                            "type": "string",
                            "description": "The item number",
                            "minLength": 8,
                            "maxLength": 8
                          },
                          "colourTicketPositionNumber": {
                            "type": "string",
                            "description": "The colour ticket position number",
                            "minLength": 1,
                            "maxLength": 1
                          },
                          "computerSizeNumber": {
                            "type": "string",
                            "description": "The computer size number",
                            "minLength": 3,
                            "maxLength": 3
                          }
                        }
                      },
                      "waistbandRiderCode": {
                        "type": "integer",
                        "description": "The code for the waistband rider",
                        "minimum": 0,
                        "maximum": 99
                      },
                      "waistbandRiderColour": {
                        "type": "string",
                        "description": "The colour of the waistband rider",
                        "minLength": 1,
                        "maxLength": 32
                      },
                      "waistbandRiderText": {
                        "type": "string",
                        "description": "The text for the waistband rider",
                        "minLength": 1,
                        "maxLength": 35
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}" (Start: 3982 , End: 4034, On: input.raml, Source: StringNodeImpl)
                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                        OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                ObjectNodeImpl (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                                        OverlayableStringNode: "200" (Start: -1 , End: -1, Source: SYIntegerNode)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                ObjectNodeImpl (Start: -1 , End: -1)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "post" (Start: -1 , End: -1, Source: SYStringNode)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                        ObjectNodeImpl (Start: -1 , End: -1)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                OverlayableStringNode: "/shipmentTicketRequests" (Start: -1 , End: -1, Source: SYStringNode)
            KeyValueNodeImpl (Start: -1 , End: -1)
                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                ObjectNodeImpl (Start: -1 , End: -1)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "value" (Start: -1 , End: -1)
                        OverlayableStringNode: "/distributionCenters" (Start: -1 , End: -1, Source: SYStringNode)
    ResourceNode (Start: 4037 , End: 4134, On: input.raml, Source: KeyValueNodeImpl)
        SYStringNode: "/logLevels/{loggerName}" (Start: 4037 , End: 4060, On: input.raml)
        SYObjectNode (Start: 4064 , End: 4134, On: input.raml)
            KeyValueNodeImpl (Start: 4064 , End: 4091, On: input.raml)
                SYStringNode: "type" (Start: 4064 , End: 4068, On: input.raml)
                ResourceTypeRefNode logLevel -> {ResourceTypeNode RefStart: 665 , RefEnd: 1550} (Start: 4070 , End: 4091, On: input.raml, Source: SYStringNode)
                    LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 4071 , End: 4092, On: input.raml)
            KeyValueNodeImpl (Start: 4094 , End: 4133, On: input.raml)
                SYStringNode: "is" (Start: 4094 , End: 4096, On: input.raml)
                SYArrayNode (Start: 4098 , End: 4133, On: input.raml)
                    TraitRefNode client-id-required -> {TraitNode RefStart: 135 , RefEnd: 321} (Start: 4100 , End: 4131, On: input.raml, Source: SYStringNode)
                        LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 4101 , End: 4132, On: input.raml)
            KeyValueNodeImpl (Start: -1 , End: -1)
                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                ObjectNodeImpl (Start: -1 , End: -1)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "value" (Start: -1 , End: -1)
                        OverlayableStringNode: "/logLevels/{loggerName}" (Start: -1 , End: -1, Source: SYStringNode)
            KeyValueNodeImpl (Start: 681 , End: 735, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                SYStringNode: "description" (Start: 681 , End: 692, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                OverlayableObjectNodeImpl (Start: 694 , End: 735, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableObjectNodeImpl)
                    KeyValueNodeImpl (Start: -1 , End: 735, Source: KeyValueNodeImpl)
                        StringNodeImpl: "value" (Start: -1 , End: -1, Source: StringNodeImpl)
                        OverlayableStringNode: "Change the severity of a specific logger." (Start: 694 , End: 735, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableStringNode)
            KeyValueNodeImpl (Start: 742 , End: 935, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                SYStringNode: "uriParameters" (Start: 742 , End: 755, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                SYObjectNode (Start: 765 , End: 935, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                    PropertyNode (Start: 765 , End: 935, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                        SYStringNode: "loggerName" (Start: 765 , End: 775, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                        TypeDeclarationNode (Start: 787 , End: 935, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                            KeyValueNodeImpl (Start: 787 , End: 848, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "description" (Start: 787 , End: 798, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                OverlayableObjectNodeImpl (Start: 800 , End: 848, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableObjectNodeImpl)
                                    KeyValueNodeImpl (Start: -1 , End: 848, Source: KeyValueNodeImpl)
                                        StringNodeImpl: "value" (Start: -1 , End: -1, Source: StringNodeImpl)
                                        OverlayableStringNode: "Name of the logger whose level is to be changed." (Start: 800 , End: 848, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableStringNode)
                            KeyValueNodeImpl (Start: 859 , End: 871, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "type" (Start: 859 , End: 863, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                NativeTypeExpressionNode: "string" (Start: 865 , End: 871, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: NativeTypeExpressionNode)
                            KeyValueNodeImpl (Start: 882 , End: 896, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "required" (Start: 882 , End: 890, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                SYBooleanNode: true (Start: 892 , End: 896, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYBooleanNode)
                            ExampleDeclarationNode (Start: 907 , End: 928, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "example" (Start: 907 , End: 914, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                SYStringNode: "org.apache" (Start: 916 , End: 928, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                ObjectNodeImpl (Start: -1 , End: -1)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "value" (Start: -1 , End: -1)
                                        OverlayableStringNode: "loggerName" (Start: -1 , End: -1, Source: SYStringNode)
            MethodNode (Start: 935 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                SYStringNode: "put" (Start: 935 , End: 938, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                SYObjectNode (Start: 948 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                    BodyNode (Start: 948 , End: 1102, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                        SYStringNode: "body" (Start: 948 , End: 952, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                        SYObjectNode (Start: 964 , End: 1102, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                            KeyValueNodeImpl (Start: 964 , End: 1102, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                SYStringNode: "application/json" (Start: 964 , End: 980, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                TypeDeclarationNode (Start: 994 , End: 1102, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                                    ExampleDeclarationNode (Start: 994 , End: 1039, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                        SYStringNode: "example" (Start: 994 , End: 1001, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                        StringNodeImpl: "{
	"newLevel": "DEBUG"
}" (Start: 1003 , End: 1039, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: StringNodeImpl)
                                    KeyValueNodeImpl (Start: 1052 , End: 1093, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                        SYStringNode: "type" (Start: 1052 , End: 1056, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                        ExternalSchemaTypeExpressionNode: "{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"type": "object",
	"title": "change  a certain log level",
	"properties": {
		"newLevel": {
			"type": "string",
			"description": "The new log level to be set.",
			"enum": [
				"OFF",
				"ERROR",
				"WARN",
				"INFO",
				"DEBUG",
				"TRACE"
			]
		},
		"createFlag": {
			"description": "Optional parameter to create a logger in case it does not exist (to avoid typo errors for existing loggers).",
			"type": "boolean"
		},
		"hoursToReset": {
			"description": "Delay in hours after which time the logger is set back to its original log level.",
			"type": "integer"
		}
	},
	"required": [
		"newLevel"
	]
}" (Start: 1058 , End: 1093, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: StringNodeImpl)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                        ObjectNodeImpl (Start: -1 , End: -1)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                    KeyValueNodeImpl (Start: 1102 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                        SYStringNode: "responses" (Start: 1102 , End: 1111, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                        SYObjectNode (Start: 1123 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                            ResponseNode (Start: 1123 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                SYIntegerNode: 200 (Start: 1123 , End: 1126, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYIntegerNode)
                                SYObjectNode (Start: 1140 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                                    BodyNode (Start: 1140 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                        SYStringNode: "body" (Start: 1140 , End: 1144, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                        SYObjectNode (Start: 1160 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                                            KeyValueNodeImpl (Start: 1160 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "application/json" (Start: 1160 , End: 1176, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                TypeDeclarationNode (Start: 1194 , End: 1550, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                                                    KeyValueNodeImpl (Start: 1194 , End: 1411, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                        SYStringNode: "description" (Start: 1194 , End: 1205, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                        OverlayableObjectNodeImpl (Start: 1207 , End: 1411, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableObjectNodeImpl)
                                                            KeyValueNodeImpl (Start: -1 , End: 1411, Source: KeyValueNodeImpl)
                                                                StringNodeImpl: "value" (Start: -1 , End: -1, Source: StringNodeImpl)
                                                                OverlayableStringNode: "Add 
"#[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)]" 
to your generated set-payload flow element.
" (Start: 1207 , End: 1411, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableStringNode)
                                                    ExampleDeclarationNode (Start: 1427 , End: 1481, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                        SYStringNode: "example" (Start: 1427 , End: 1434, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                        StringNodeImpl: "{
  "message" : "TODO you need to replace this generated setpayload by #[com.canda.mulestac.logging.ChangeLogLevel.changeWithJson(flowVars.loggerName, payload)] in the api.xml"
}" (Start: 1436 , End: 1481, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: StringNodeImpl)
                                                    KeyValueNodeImpl (Start: 1498 , End: 1548, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                        SYStringNode: "type" (Start: 1498 , End: 1502, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                        ExternalSchemaTypeExpressionNode: "{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "message": {
      "description":"the human readable result of the changeLogLevel operation.",
      "type": "string"
    }
  }
}" (Start: 1504 , End: 1548, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: StringNodeImpl)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                        ObjectNodeImpl (Start: -1 , End: -1)
                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                OverlayableStringNode: "application/json" (Start: -1 , End: -1, Source: SYStringNode)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                        ObjectNodeImpl (Start: -1 , End: -1)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                OverlayableStringNode: "200" (Start: -1 , End: -1, Source: SYIntegerNode)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                        ObjectNodeImpl (Start: -1 , End: -1)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                OverlayableStringNode: "put" (Start: -1 , End: -1, Source: SYStringNode)
    ResourceNode (Start: 4134 , End: 4209, On: input.raml, Source: KeyValueNodeImpl)
        SYStringNode: "/ping" (Start: 4134 , End: 4139, On: input.raml)
        SYObjectNode (Start: 4143 , End: 4209, On: input.raml)
            KeyValueNodeImpl (Start: 4143 , End: 4166, On: input.raml)
                SYStringNode: "type" (Start: 4143 , End: 4147, On: input.raml)
                ResourceTypeRefNode ping -> {ResourceTypeNode RefStart: 339 , RefEnd: 665} (Start: 4149 , End: 4166, On: input.raml, Source: SYStringNode)
                    LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 4150 , End: 4167, On: input.raml)
            KeyValueNodeImpl (Start: 4169 , End: 4208, On: input.raml)
                SYStringNode: "is" (Start: 4169 , End: 4171, On: input.raml)
                SYArrayNode (Start: 4173 , End: 4208, On: input.raml)
                    TraitRefNode client-id-required -> {TraitNode RefStart: 135 , RefEnd: 321} (Start: 4175 , End: 4206, On: input.raml, Source: SYStringNode)
                        LibraryRefNode candaCommons -> {SYObjectNode RefStart: 19 , RefEnd: 2079} (Start: 4176 , End: 4207, On: input.raml)
            KeyValueNodeImpl (Start: -1 , End: -1)
                StringNodeImpl: "displayName" (Start: -1 , End: -1)
                ObjectNodeImpl (Start: -1 , End: -1)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "value" (Start: -1 , End: -1)
                        OverlayableStringNode: "/ping" (Start: -1 , End: -1, Source: SYStringNode)
            KeyValueNodeImpl (Start: 349 , End: 536, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                SYStringNode: "description" (Start: 349 , End: 360, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                OverlayableObjectNodeImpl (Start: 362 , End: 536, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableObjectNodeImpl)
                    KeyValueNodeImpl (Start: -1 , End: 536, Source: KeyValueNodeImpl)
                        StringNodeImpl: "value" (Start: -1 , End: -1, Source: StringNodeImpl)
                        OverlayableStringNode: "Answers the current version of the deployed Mule application, possibly a value like "2018.6.1". Your implementation should always return **${muleapp.version.info}**.
" (Start: 362 , End: 536, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: OverlayableStringNode)
            MethodNode (Start: 540 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                SYStringNode: "get" (Start: 540 , End: 543, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                SYObjectNode (Start: 551 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                    KeyValueNodeImpl (Start: 551 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                        SYStringNode: "responses" (Start: 551 , End: 560, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                        SYObjectNode (Start: 571 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                            ResponseNode (Start: 571 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                SYIntegerNode: 200 (Start: 571 , End: 574, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYIntegerNode)
                                SYObjectNode (Start: 586 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                                    BodyNode (Start: 586 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                        SYStringNode: "body" (Start: 586 , End: 590, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                        SYObjectNode (Start: 604 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                                            KeyValueNodeImpl (Start: 604 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                SYStringNode: "text/plain" (Start: 604 , End: 614, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                TypeDeclarationNode (Start: 630 , End: 665, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYObjectNode)
                                                    ExampleDeclarationNode (Start: 630 , End: 662, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: KeyValueNodeImpl)
                                                        SYStringNode: "example" (Start: 630 , End: 637, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                        SYStringNode: "${muleapp.version.info}" (Start: 639 , End: 662, On: exchange_modules/6b05fd51-2fe5-4078-b1a1-83d16894bf76/canda-commons/1.0.8/canda-commons.raml, Source: SYStringNode)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "type" (Start: -1 , End: -1)
                                                        OverridableNativeTypeExpressionNode: "any" (Start: -1 , End: -1)
                                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                                        ObjectNodeImpl (Start: -1 , End: -1)
                                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                                OverlayableStringNode: "text/plain" (Start: -1 , End: -1, Source: SYStringNode)
                                    KeyValueNodeImpl (Start: -1 , End: -1)
                                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                                        ObjectNodeImpl (Start: -1 , End: -1)
                                            KeyValueNodeImpl (Start: -1 , End: -1)
                                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                                OverlayableStringNode: "200" (Start: -1 , End: -1, Source: SYIntegerNode)
                    KeyValueNodeImpl (Start: -1 , End: -1)
                        StringNodeImpl: "displayName" (Start: -1 , End: -1)
                        ObjectNodeImpl (Start: -1 , End: -1)
                            KeyValueNodeImpl (Start: -1 , End: -1)
                                StringNodeImpl: "value" (Start: -1 , End: -1)
                                OverlayableStringNode: "get" (Start: -1 , End: -1, Source: SYStringNode)
